{"title":"AI Methods","uid":"e8690cb5cccdb863caaf29d6fe84aa6a","slug":"aim","date":"2024-06-09T22:37:56.000Z","updated":"2024-06-09T22:37:28.259Z","comments":true,"path":"api/articles/aim.json","keywords":null,"cover":"https://www.investopedia.com/thmb/4K3hIci9bUF3521OUjC-cCG3NpE=/1500x0/filters:no_upscale():max_bytes(150000):strip_icc()/terms_a_artificial-intelligence-ai_asp-FINAL-ddba8ac599f3438d8064350d2ee1ae5a.jpg","content":"<h1 id=\"introduction-heuristic-search-introduction-pseudo-random-numbers\"><a class=\"markdownIt-Anchor\" href=\"#introduction-heuristic-search-introduction-pseudo-random-numbers\"></a> Introduction, Heuristic search (introduction), Pseudo-random numbers</h1>\n<h2 id=\"preliminaries\"><a class=\"markdownIt-Anchor\" href=\"#preliminaries\"></a> Preliminaries</h2>\n<h3 id=\"decision-support\"><a class=\"markdownIt-Anchor\" href=\"#decision-support\"></a> Decision support</h3>\n<p>This term is used often and in a variety of contexts related to decision making</p>\n<h3 id=\"system\"><a class=\"markdownIt-Anchor\" href=\"#system\"></a> System</h3>\n<ul>\n<li>Degree of dependence of systems on the environment\n<ul>\n<li><strong>Closed systems</strong> are totally independent</li>\n<li><strong>Open systems</strong> dependent on their environment</li>\n</ul>\n</li>\n<li>Evaluations of systems\n<ul>\n<li><strong>System effectiveness</strong>: the degree to which goals are achieved, i.e. result, output</li>\n<li><strong>System efficiency</strong>: a measure of the use of inputs (or resources) to achieve output, e.g., speed</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"solving-problems-by-searching\"><a class=\"markdownIt-Anchor\" href=\"#solving-problems-by-searching\"></a> Solving problems by searching</h3>\n<ul>\n<li>Search for paths to goals\n<ul>\n<li>typical algorithms are the depth firstsearch, breadth first search, uniform cost search, branch and bound, A*</li>\n</ul>\n</li>\n<li>Search for solutions (optimisation)\n<ul>\n<li>more general class than searching for paths to goals</li>\n<li>efficiently finding a solution to a problem in a large space of candidate solutions</li>\n<li>subsumes the first type, since a path through a search tree can be encoded as a candidate solution</li>\n</ul>\n</li>\n<li>Search in Continuous vs Discrete Space</li>\n</ul>\n<h3 id=\"solving-an-mathematical-optimisation-problem-steps\"><a class=\"markdownIt-Anchor\" href=\"#solving-an-mathematical-optimisation-problem-steps\"></a> Solving an (mathematical) optimisation problem - steps</h3>\n<ul>\n<li>First choose a quantity (typically a function of several variables –objective function) to be maximised or minimised, which might be subject to one or more constraints (constraint optimisation)</li>\n<li>Next choose a mathematical or search method to solve the optimisation problem (searching the space of solutions and detecting absolutely the best/optimal solution)</li>\n</ul>\n<h3 id=\"optimization\"><a class=\"markdownIt-Anchor\" href=\"#optimization\"></a> Optimization</h3>\n<ul>\n<li>\n<p>Fundamental problem of optimization is to arrive at the best possible (optimal) decision/solution in any given set of circumstances</p>\n</li>\n<li>\n<p>Global Optimization<br />\nGlobal optimization is the task of <strong>finding the absolutely best set of admissible conditions</strong> to achieve your objective, formulated in mathematical terms</p>\n</li>\n<li>\n<p>In most cases “the best” (optimal) is unattainable</p>\n</li>\n<li>\n<p>Global vs Local Optimum</p>\n<ul>\n<li>Global Optimum- better than all other solutions (best)</li>\n<li>Local Optimum- better than all solutions in a certainneighbourhood</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"problem-and-problem-instance\"><a class=\"markdownIt-Anchor\" href=\"#problem-and-problem-instance\"></a> Problem and Problem Instance</h3>\n<ul>\n<li>Problem refers to the high level question or optimization issue to be solved</li>\n<li>An instance of this problem is the concrete expression, which represents the input for a decision or optimization problem</li>\n</ul>\n<h3 id=\"combinatorial-optimization-problems-cop\"><a class=\"markdownIt-Anchor\" href=\"#combinatorial-optimization-problems-cop\"></a> Combinatorial optimization problems (COP)</h3>\n<ul>\n<li>Require finding an optimal object from a finite set of objects</li>\n<li>For NP-hard COPs, the time complexity of finding solutions can grow exponentially with instance size</li>\n</ul>\n<h3 id=\"optimizationsearch-methods\"><a class=\"markdownIt-Anchor\" href=\"#optimizationsearch-methods\"></a> Optimization/Search Methods</h3>\n<ul>\n<li>\n<p><strong>Exact/Exhaustive/Systematic Methods</strong></p>\n<ul>\n<li>e.g., Dynamic Programming, Branch&amp;Bound, Constraint Satisfaction, …\n<ul>\n<li>limitations: only work if the problem is structured - in many cases for small problem instances</li>\n<li>quite often used to solve sub-problems</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Inexact/Approximate/Local Search Methods</strong></p>\n<ul>\n<li>e.g., heuristics,metaheuristics, hyper-heuristics,…</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"search-paradigms\"><a class=\"markdownIt-Anchor\" href=\"#search-paradigms\"></a> Search Paradigms</h3>\n<ul>\n<li>Perturbative←→Constructive\n<ul>\n<li>\n<p>start from complete solutions</p>\n</li>\n<li>\n<p>start from partial solutions</p>\n</li>\n</ul>\n</li>\n<li>deterministic ←→ stochastic\n<ul>\n<li>provide the same solution regardless of how many times</li>\n<li>contain a random component and may return a different solution at each time</li>\n</ul>\n</li>\n<li>systematic ←→ local search</li>\n<li>sequential ←→ parallel</li>\n<li>single objective ←→ multi-objective</li>\n</ul>\n<h2 id=\"heuristic-searchoptimization\"><a class=\"markdownIt-Anchor\" href=\"#heuristic-searchoptimization\"></a> Heuristic Search/Optimization</h2>\n<h3 id=\"heuristic-search-methods\"><a class=\"markdownIt-Anchor\" href=\"#heuristic-search-methods\"></a> Heuristic Search Methods</h3>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>A <strong>heuristic</strong> is a rule of thumb method derived from human intuition.</p></blockquote>\n<ul>\n<li>\n<p>A heuristic is a problem dependent search method which seeks good, i.e. near-optimal solutions, at a reasonable cost (e.g. speed) without being able to guarantee optimality</p>\n</li>\n<li>\n<p>Good for solving ill-structured problems, or complex well-structured problems (large-scale combinatorial problems that have many potential solutions to explore)</p>\n</li>\n</ul>\n<h3 id=\"case-study-traveling-salesman-problem-tsp\"><a class=\"markdownIt-Anchor\" href=\"#case-study-traveling-salesman-problem-tsp\"></a> Case study: Traveling Salesman Problem (TSP)</h3>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>&quot;Given a list of cities and the distances between each pair of cities,what is the shortest possible route that visits each city and returns to the origin city?” – NP hard</p></blockquote>\n<p>Examples heuristics for TSP</p>\n<ul>\n<li><strong>The nearest neighbour (NN) algorithm</strong> - Constructive(Stochastic, Systematic)<br />\nA Constructive Stochastic Local Search Algorithm for TSP(based on NN algorithm)\n<ul>\n<li>Step 1: Choose a random city</li>\n<li>Step 2: Apply nearest neighbour to construct a complete solution</li>\n<li>Step 3: Compare the new solution to the best found so far and update the best solution as appropriate</li>\n<li>Step 4: Go-to Step 1 and repeat while the maximum number of iterations is not exceeded (parameter)</li>\n<li>Step 5: Return the best solution</li>\n</ul>\n</li>\n<li><strong>Pairwise exchange (2-opt)</strong> - Perturbative (Stochastic, Local Search)<br />\nA Perturbative Stochastic Local Search Algorithm for TSP(based on 2-opt)\n<ul>\n<li>Step 1: Create a random current solution (build a permutation array and shuffle its content)</li>\n<li>Step 2: Apply 2-opt: swap two randomly chosen cities forming a new solution</li>\n<li>Step 3: Compare the new solution to the current solution and if there is improvement make the new solution current solution, otherwise continue</li>\n<li>Step 4: Go-to Step 2 and repeat while the maximum number of iterations is not exceeded (parameter)</li>\n<li>Step 5: Return the current solution</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"drawbacks-of-heuristic-search\"><a class=\"markdownIt-Anchor\" href=\"#drawbacks-of-heuristic-search\"></a> Drawbacks of Heuristic Search</h3>\n<ul>\n<li>There is no guarantee for the optimality of the obtained solutions</li>\n<li>Usually can be used only for the specific situation for which they are designed</li>\n<li>Often, heuristics have some parameters\n<ul>\n<li>Performance of a heuristic could be sensitive to the setting of those parameters</li>\n</ul>\n</li>\n<li>May give a poor solution</li>\n</ul>\n<h2 id=\"pseudo-random-numbers\"><a class=\"markdownIt-Anchor\" href=\"#pseudo-random-numbers\"></a> Pseudo-random numbers</h2>\n<h3 id=\"some-problems-with-pseudo-random-numbers\"><a class=\"markdownIt-Anchor\" href=\"#some-problems-with-pseudo-random-numbers\"></a> Some problems with pseudo-random numbers</h3>\n<ul>\n<li>Shorter than expected periods for some seed states; such seed states may be called ‘weak’ in this context</li>\n<li>Lack of uniformity of distribution (e.g., 0.17 appears 100 times in10000 successive numbers while 0.29 appears 5 times more)</li>\n<li>Correlation of successive values</li>\n<li>The distances between where certain values occur are distributed differently from those in a random sequence distribution</li>\n</ul>\n<h1 id=\"components-of-heuristic-search-hill-climbing-hc-performance-analysis\"><a class=\"markdownIt-Anchor\" href=\"#components-of-heuristic-search-hill-climbing-hc-performance-analysis\"></a> Components of heuristic search, Hill climbing (HC) , Performance analysis</h1>\n<h2 id=\"main-components-of-heuristic-search-methods\"><a class=\"markdownIt-Anchor\" href=\"#main-components-of-heuristic-search-methods\"></a> Main components of heuristic search methods</h2>\n<ul>\n<li><strong>Representation</strong></li>\n<li><strong>Evaluation function</strong> (objective function)</li>\n<li><strong>Initialization</strong> (e.g., random)</li>\n<li><strong>Neighborhood relation</strong> (move operators)</li>\n<li><strong>Search process</strong> (guideline)</li>\n<li><strong>Mechanism for escaping from local optima</strong></li>\n</ul>\n<h3 id=\"representation\"><a class=\"markdownIt-Anchor\" href=\"#representation\"></a> Representation</h3>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Encoding of candidate solutions</p></blockquote>\n<h4 id=\"characteristics\"><a class=\"markdownIt-Anchor\" href=\"#characteristics\"></a> Characteristics</h4>\n<ul>\n<li><strong>completeness</strong>: all solutions associated with the problem must be represented</li>\n<li><strong>connexity</strong>: a search path must exist between any two solutions of the search space. Any solution of the search space, especially the global optimum solution, can be attained</li>\n<li><strong>efficiency</strong>: The representation must be easy to manipulate by the search operators</li>\n</ul>\n<h4 id=\"example\"><a class=\"markdownIt-Anchor\" href=\"#example\"></a> Example</h4>\n<ul>\n<li>Binary encoding (e.g. 10110010110010…1011)\n<ul>\n<li>Given a binary string of length N (representing N items), search space size is 2^N</li>\n</ul>\n</li>\n<li>Permutation encoding (e.g. for TSP: 1 5 3 2 6 4 7 9 8)\n<ul>\n<li>Given N cities (pubs), search space size is N!</li>\n</ul>\n</li>\n<li>Integer encoding (e.g. 1 3 4 5 5 5 4 1 1 … 2 2 1)\n<ul>\n<li>For a general problem with M composite materials to form an N-layer composite structure, search space size is M^N</li>\n</ul>\n</li>\n<li>Value encoding (e.g. ATFCTTCGG) (e.g. 1.2324 5.3243 …) (e.g.&lt;back, back, right, forward, left, …&gt;)</li>\n<li>Nonlinear encoding (e.g. tree encoding - genetic programming)</li>\n<li>Special encodings (e.g. random key encoding)</li>\n</ul>\n<h3 id=\"evaluation-function\"><a class=\"markdownIt-Anchor\" href=\"#evaluation-function\"></a> Evaluation function</h3>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Indicates the quality of a given solution, distinguishing between better and worse solutions</p></blockquote>\n<ul>\n<li>Also referred to as objective , cost, fitness, penalty, etc.</li>\n<li>Serves as a major link between the algorithm and the problem being solved\n<ul>\n<li>provides an important feedback for the search process</li>\n</ul>\n</li>\n<li>Many types: (non)separable, uni/multi-modal, single/multi-objective, etc.</li>\n<li>Evaluation functions could be computationally expensive</li>\n<li>Exact vs. approximate\n<ul>\n<li>Common approaches to constructing approximate models: polynomials, regression, SVMs, etc.</li>\n<li>Constructing a globally valid approximate model remains difficult, and so beneficial to selectively use the original evaluation function together with the approximate model</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"evaluation-function-delta-incremental-evaluation\"><a class=\"markdownIt-Anchor\" href=\"#evaluation-function-delta-incremental-evaluation\"></a> Evaluation Function - Delta (Incremental) Evaluation</h4>\n<ul>\n<li>Key idea: calculate effects of differences between current search position S and a neighbour S’ on the evaluation function value.</li>\n<li>Evaluation function values often consist of independent contributions of solution components; hence,<br />\nf(S’) can be efficiently calculated from f(S) by differences between S and S’ in terms of solution components</li>\n<li>Crucial for efficient implementation of heuristics/metaheuristics/hyper-heuristics</li>\n</ul>\n<h3 id=\"neighborhoods\"><a class=\"markdownIt-Anchor\" href=\"#neighborhoods\"></a> Neighborhoods</h3>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>A neighborhood of a solution is a set of solutions that can be reached from by a simple operator (move operator/heuristic)</p></blockquote>\n<h4 id=\"example-neighborhood-for-binary-representation\"><a class=\"markdownIt-Anchor\" href=\"#example-neighborhood-for-binary-representation\"></a> Example neighborhood for binary representation:</h4>\n<p><strong>Bit-flip operator</strong></p>\n<ul>\n<li>flips a bit in a given solution</li>\n<li><strong>Hamming Distance</strong>\n<ul>\n<li>Between two bit strings (vectors) of equal length is the number of positions at which the corresponding symbols differ.</li>\n<li>e.g. HD(011, 010) = 1</li>\n</ul>\n</li>\n<li>If the binary string is of size n, then the neighborhood size is n</li>\n</ul>\n<p><strong>A discrete value is replaced by any other character of the alphabet</strong></p>\n<ul>\n<li>If the solution is of size n and alphabet is of size k , then the neighborhood size is (k - 1) * n</li>\n</ul>\n<p><strong>Adjacent pairwise interchange</strong></p>\n<ul>\n<li>swap adjacent entries in the permutation (e.g. <mark>5 1</mark> 4 3 2 -&gt; <mark>1 5</mark> 4 3 2)</li>\n<li>If permutation is of size n, then the neighborhood size is n - 1</li>\n</ul>\n<p><strong>Insertion operator</strong></p>\n<ul>\n<li>\n<p>take an entry in the permutation and insert itin another position (e.g. <mark>5</mark> 1 4 3 2 -&gt; 1 4 <mark>5</mark> 3 2)</p>\n</li>\n<li>\n<p>Neighborhood size: n * (n - 1)</p>\n</li>\n</ul>\n<p><strong>Exchange operator</strong></p>\n<ul>\n<li>arbitrarily selected two entries are swapped(e.g. <mark>5</mark> 4 3 <mark>1</mark> 2 -&gt; <mark>1</mark> 4 3 <mark>5</mark> 2)</li>\n</ul>\n<p><strong>Inversion operator</strong></p>\n<ul>\n<li>select two arbitrary entries and invert the sequence in between them (e.g. 1 <mark>4 5 3</mark> 2 -&gt; 1 <mark>3 5 4</mark> 2)</li>\n</ul>\n<h3 id=\"summary-of-components\"><a class=\"markdownIt-Anchor\" href=\"#summary-of-components\"></a> Summary of components</h3>\n<ul>\n<li>Choosing an appropriate encoding to represent a candidate solution is crucial in heuristic optimisation</li>\n<li>Initialisation could influence the performance of an optimisation algorithm</li>\n<li>Evaluation function guides the search process and fast evaluation is important</li>\n</ul>\n<h2 id=\"hill-climbing-algorithms\"><a class=\"markdownIt-Anchor\" href=\"#hill-climbing-algorithms\"></a> Hill climbing algorithms</h2>\n<h3 id=\"search-paradigm\"><a class=\"markdownIt-Anchor\" href=\"#search-paradigm\"></a> Search paradigm</h3>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>Perturbative</strong> heuristics/operators:</p>\n<ul>\n<li><strong>Mutational</strong> (diversification/exploration) vs.</li>\n<li><strong>Hill-climbing</strong> (intensification/exploitation)</li>\n</ul></blockquote>\n<ul>\n<li>\n<p><strong>Mutational</strong> heuristics/operator:</p>\n<p>Processes a given candidate solution and generates a solution which is <strong>not guaranteed</strong> to be better</p>\n</li>\n<li>\n<p><strong>Hill climbing</strong> heuristics/operator:</p>\n<p>Processes a given candidate solution and generates a <strong>better or equal</strong> quality solution</p>\n</li>\n</ul>\n<h3 id=\"minimisation-problem-maximisation-problem\"><a class=\"markdownIt-Anchor\" href=\"#minimisation-problem-maximisation-problem\"></a> Minimisation problem &amp; Maximisation problem</h3>\n<ul>\n<li>\n<p>A local search algorithm which constantly moves in the direction of <strong>decreasing</strong> level/objective value (<strong>for a minimisation problem</strong>) to find the <strong>nadir</strong>/the lowest point of the landscape or best/near optimal solution to the problem</p>\n<ul>\n<li>The hill climbing algorithm halts when it detects a nadir value (where no neighbour has a lower value)</li>\n</ul>\n</li>\n<li>\n<p>A local search algorithm which constantly moves in the direction of <strong>increasing</strong> level/objective value (<strong>for a maximisation problem</strong>) to find the <strong>peak</strong>/the highest point of the landscape or best/near optimal solution to the problem</p>\n<ul>\n<li>The hill climbing algorithm halts when it detects a peak value (where no neighbour has a higher value)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"pseudocode\"><a class=\"markdownIt-Anchor\" href=\"#pseudocode\"></a> Pseudocode</h3>\n<ol>\n<li>\n<p>Pick an initial starting point (current state) in the search space</p>\n</li>\n<li>\n<p>Repeat</p>\n<ol>\n<li>\n<p>Consider the neighbors of the current state</p>\n</li>\n<li>\n<p>Compare new point(s) in the neighborhood of the current state with the current state using an evaluation function and choose a new point with the best quality(among them) and move to that state</p>\n</li>\n</ol>\n</li>\n<li>\n<p>Until there is no more improvement or when a predefined number of iterations is reached</p>\n</li>\n<li>\n<p>Return the current state as the solution state</p>\n</li>\n</ol>\n<h3 id=\"note-of-algorithm\"><a class=\"markdownIt-Anchor\" href=\"#note-of-algorithm\"></a> Note of algorithm</h3>\n<ul>\n<li>\n<p>Initial starting points may be chosen</p>\n<ul>\n<li>randomly</li>\n<li>use a constructive heuristic/operator(s)</li>\n<li>according to some regular pattern</li>\n<li>based on other information (e.g. results of a prior search)</li>\n</ul>\n</li>\n<li>\n<p>Variations of hill-climbing algorithms differ in the way for selecting a new solution compared to the current solution</p>\n</li>\n<li>\n<p>improving vs. non-worsening ( <code>tmpEval &lt; bestEval vs. tmpEval &lt;=bestEval</code> )</p>\n</li>\n<li>\n<p>When to stop</p>\n<ul>\n<li>If the target objective is known, then the search can be stopped when that target objective value is achieved</li>\n<li>Hill climbing could be applied repeatedly until a termination criterion is satisfied\n<ul>\n<li>However, there is no point in applying Best Improvement,Next Improvement and Davis’s (Bit) Hill Climbing if there is no improvement after any single pass over a solution</li>\n<li>Random Mutation Hill Climbing requires consideration</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"simple-hill-climbing-heuristic\"><a class=\"markdownIt-Anchor\" href=\"#simple-hill-climbing-heuristic\"></a> Simple hill climbing heuristic</h3>\n<ul>\n<li>\n<p>Simple Hill Climbing examining neighbors:</p>\n<ul>\n<li>Best improvement (steepest descent/ascent)</li>\n<li>First improvement (next descent/ascent)</li>\n<li>Trade-off between <u>the number of search steps required for finding a local optimum</u> and <u>the computation time for each search step</u>.\n<ul>\n<li>Typically, for <strong>First Improvement</strong> search steps can be computed <strong>more efficiently</strong> than when using Best Improvement, since especially as long as there are multiple improving search steps from a current candidate solution, <u>only a small part of the local neighborhood</u> is evaluated by First Improvement. (Best improvement has larger search range)</li>\n<li>However, the improvement obtained by each step of First Improvement local search is typically <strong>smaller</strong> than for Best Improvement and therefore, more search steps have to be applied to reach a local optimum.</li>\n<li>Additionally, <strong>Best Improvement benefits more</strong> than First Improvement from <strong>the use of caching and updating</strong> mechanisms for evaluating neighbors efficiently.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Stochastic Hill Climbing (randomly choose neighbors)</p>\n<ul>\n<li>Davis’s (bit) hill-climbing (DBHC)</li>\n<li>Random selection/mutation hill climbing</li>\n</ul>\n</li>\n<li>\n<p>Random-restart (shotgun) hill climbing is built on top of hill climbing and operates by changing the starting solution for the hill climbing, randomly and returning the best</p>\n</li>\n</ul>\n<h3 id=\"hill-climbing-vs-random-walk\"><a class=\"markdownIt-Anchor\" href=\"#hill-climbing-vs-random-walk\"></a> Hill climbing vs. Random walk</h3>\n<ul>\n<li>A Hill-climbing method <strong>exploits the best available solution</strong> for possible improvement but <strong>neglect exploring</strong> a large portion of the search space</li>\n<li>Random walk <strong>explores</strong> the search space thoroughly but misses <strong>exploiting promising regions</strong></li>\n</ul>\n<h3 id=\"advantage\"><a class=\"markdownIt-Anchor\" href=\"#advantage\"></a> Advantage:</h3>\n<p>Very easy to implement, requiring:</p>\n<ul>\n<li>a representation;</li>\n<li>an evaluation function;</li>\n<li>a measure that defines the neighborhood around a point in the search space.</li>\n</ul>\n<h3 id=\"disadvantage\"><a class=\"markdownIt-Anchor\" href=\"#disadvantage\"></a> Disadvantage:</h3>\n<ul>\n<li><strong>Local Optimum</strong>: If all neighboring states are worse or the same. The algorithm will halt even though the solution may be far from satisfactory</li>\n<li><strong>Plateau (neutral space/shoulder)</strong>: All neighbouring states are the same as the current state. In other words the evaluation function is essentially flat. The search will conduct a random walk</li>\n<li><strong>Ridge/valley</strong>: The search may oscillate from side to side, making little progress. In each case, the algorithm reaches a point at which no progress is being made. If this happens, an obvious thing to do is start again from a different starting point</li>\n<li>As a result, hill climbing algorithm <strong>may not find the optimal solution</strong> and <strong>may get stuck at a local optimum</strong></li>\n<li><strong>No information</strong> as to how much the discovered local optimum deviates from the global (or even other local optima)</li>\n<li>Usually <strong>no upper bound on computation time</strong></li>\n<li>Success/failure of each iteration <strong>depends on starting point</strong></li>\n</ul>\n<h3 id=\"question-example\"><a class=\"markdownIt-Anchor\" href=\"#question-example\"></a> Question Example</h3>\n<p>example: “Assume that Davis’s Bit Hill Climbing , First Improvement Hill Climbing and Steepest Descent Hill Climbing<br />\nalgorithms are applied to a MAX-SAT problem instance resulting in average objective values of 12.4, 34.3 and 25.7, respectively, over 30 runs.”</p>\n<ul>\n<li>Davis’s Bit Hill Climbing would perform the best for solving MAX-SAT problems assuming a minimisation problem formulation (✕ -Any comment for 1 instance is <u>valid only for 1 problem instance,not for the whole algorithm</u>)</li>\n<li>Davis’s Bit Hill Climbing performs the best based on the average objective value on this problem instance (✕ - do not know it’s a maximisation / minimisation problem)</li>\n<li>Assuming that the problem is formulated as a maximisation problem, then First Improvement Hill Climbing performs the best based on the average objective value on this problem instance (✓)</li>\n</ul>\n<h3 id=\"statistical-tests\"><a class=\"markdownIt-Anchor\" href=\"#statistical-tests\"></a> Statistical tests</h3>\n<ul>\n<li>The <strong>null hypothesis</strong> states the results are due to chance and are not significant in terms of supporting the idea being investigated</li>\n<li>A <strong>p-value</strong>/ probability value, is a number describing how likely it is that your data would have occurred by random chance (i.e. that the null hypothesis is true)</li>\n<li>Apply non-parametric statistical test - one tailed:\n<ul>\n<li>Given two algorithms: X vs. Y, X &gt; Y (X &lt; Y) denotes that X(Y) is better than Y(X) and this performance difference is statistically significant within a confidence interval of 95% and X &gt;= Y ( X &lt;= Y) indicates that X(Y) performs better on average than  Y(X) but no statistical significance</li>\n<li>A stronger conclusion can be provided for one instance</li>\n<li>Always repeat the experiments more than or equal to 30 times for any given instance for a meaningful statistical comparison</li>\n</ul>\n</li>\n</ul>\n<div STYLE=\"page-break-after: always;\"></div>\n<h3 id=\"boxplots\"><a class=\"markdownIt-Anchor\" href=\"#boxplots\"></a> Boxplots</h3>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Boxplots illustrates groups of numerical data through their quartiles</p></blockquote>\n<img src=\"https://eumcm.com/file/e852a34c18c129058460a.jpg\" width=\"560\" height=\"280\" />\n<h3 id=\"notched-boxplots\"><a class=\"markdownIt-Anchor\" href=\"#notched-boxplots\"></a> Notched boxplots</h3>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Notched boxplots allows you to evaluate confidence intervals (by default 95% confidence interval) for the medians of each boxplot</p></blockquote>\n<img src=\"https://eumcm.com/file/e7786b7f070f85c18932b.png\" width=\"360\" height=\"360\" />\n<ul>\n<li>Since the notches in the boxplots A vs. B vs. C do not overlap,you can conclude that with 95% confidence that the true medians do differ between each pair of those algorithms on current instance: A performs significantly better than B as well as C, and B performs significantly better than C</li>\n</ul>\n<h3 id=\"progress-plot-per-instance\"><a class=\"markdownIt-Anchor\" href=\"#progress-plot-per-instance\"></a> Progress plot - per instance</h3>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Objective value from a run or mean of objective values from multiple runs per iteration/time unit</p></blockquote>\n<img src=\"https://eumcm.com/file/cc27b81695d412575c627.png\" width=\"560\" height=\"280\" />\n<h1 id=\"metaheuristic\"><a class=\"markdownIt-Anchor\" href=\"#metaheuristic\"></a> Metaheuristic</h1>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>A metaheuristic is a high-level problem independent algorithmic framework that provides a set of guidelines or strategies to develop heuristic optimization algorithms</p></blockquote>\n<h2 id=\"components-of-metaheuristic\"><a class=\"markdownIt-Anchor\" href=\"#components-of-metaheuristic\"></a> Components of metaheuristic</h2>\n<ul>\n<li>Representation of candidate solutions</li>\n<li>Evaluation function</li>\n<li>Initialisation: E.g., initial candidate solution may be chosen\n<ul>\n<li>randomly use a constructive heuristic</li>\n<li>according to some regular pattern</li>\n<li>based on other information (e.g. results of a prior search), and more</li>\n</ul>\n</li>\n<li>Neighborhood relation (move operators)</li>\n<li><strong>Search process (guideline)</strong></li>\n<li><strong>Stopping conditions</strong></li>\n<li><strong>Mechanism for escaping from local optima</strong></li>\n</ul>\n<div STYLE=\"page-break-after: always;\"></div>\n<h3 id=\"mechanism-for-escaping-from-local-optima\"><a class=\"markdownIt-Anchor\" href=\"#mechanism-for-escaping-from-local-optima\"></a> Mechanism for escaping from local optima</h3>\n<ul>\n<li><strong>Iterate with different solutions, or restart</strong> (reinitialise search whenever a local optimum is encountered)\n<ul>\n<li>Initialisation could be costly</li>\n<li>restart could be partial (e.g. change 10% of previous solution)</li>\n<li>e.g. Iterated Local Search (ILS), GRASP</li>\n</ul>\n</li>\n<li><strong>Change the search landscape</strong>\n<ul>\n<li>Change the objective function (e.g. Guided Local Search)</li>\n<li>Use (mix) different neighborhoods (e.g. Variable Neighbourhood Search, Hyper-heuristics)</li>\n</ul>\n</li>\n<li><strong>Use Memory</strong><br />\n(e.g. tabu search (TS))</li>\n<li><strong>Accept non-improving moves</strong><br />\nallow search using candidate solutions with equal or worse evaluation function value than the one in hand\n<ul>\n<li>Could lead to long walks on plateaus (neutral regions) during the search process, potentially causing cycles – visiting of thesame states</li>\n</ul>\n</li>\n<li><u><strong>None</strong> of the mechanisms is guaranteed to always escape effectively from local optima</u></li>\n</ul>\n<h3 id=\"stopping-conditions-examples\"><a class=\"markdownIt-Anchor\" href=\"#stopping-conditions-examples\"></a> Stopping conditions (examples)</h3>\n<ul>\n<li>Stop if <strong>a fixed maximum number of iterations</strong>, or moves, or objective function evaluations, or a fixed amount of CPU time is exceeded</li>\n<li>Stop if <strong>consecutive number of iterations since the last improvement</strong> in the best objective function value is larger thana specified number</li>\n<li>Stop if evidence can be given than an optimum solution has been obtained (i.e. <strong>optimum objective value is known</strong>)</li>\n<li>Stop if <strong>no feasible solution</strong> can be obtained for a fixed number of steps/time (a solution is feasible if it satisfies all constraints in an optimisation problem)</li>\n</ul>\n<h3 id=\"deal-with-infeasible-solution\"><a class=\"markdownIt-Anchor\" href=\"#deal-with-infeasible-solution\"></a> Deal with (in)feasible solution</h3>\n<ul>\n<li>\n<p>simply reject infeasible solution</p>\n</li>\n<li>\n<p>Use a problem domain specific repair operator</p>\n<ul>\n<li>e.g. for 0/1 Knapsack Problem with constraints of 15kg, randomly flip a bit to 0 until the solution in hand feasible:1 1 0 1 0: $16 (18 kg, ✕) -&gt; 1 0 0 1 0: $14 (16 kg, ✕) -&gt; 1 0 0 0 0: $4 (12 kg, ✓)</li>\n</ul>\n</li>\n<li>\n<p><strong>Penalise</strong> each constraint violation for the infeasible solutions such that they can’t be better than the worst feasible solution for a given instance</p>\n<ul>\n<li>Set a fixed (death) penalty value poorer than the worst\n<ul>\n<li>e.g., <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>f</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo stretchy=\"false\">(</mo><mi>s</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f&#x27;(s)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.001892em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mclose\">)</span></span></span></span>= if s is infeasible, then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">{</mo><msub><mi>p</mi><mi>i</mi></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">∀</mi><mi>i</mi><mo stretchy=\"false\">}</mo><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">min\\{p_i,\\forall i\\}/2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">{</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">∀</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">}</span><span class=\"mord\">/</span><span class=\"mord\">2</span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>p</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">p_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> is the profit from the i th item</li>\n</ul>\n</li>\n<li>Distinguish the level of infeasibility of a solution with the penalty\n<ul>\n<li>e.g., <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>f</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo stretchy=\"false\">(</mo><mi>s</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f&#x27;(s)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.001892em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mclose\">)</span></span></span></span>= if s is infeasible, then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">{</mo><msub><mi>p</mi><mi>i</mi></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">∀</mi><mi>i</mi><mo stretchy=\"false\">}</mo><mi mathvariant=\"normal\">/</mi><mo stretchy=\"false\">(</mo><mn>2</mn><mo>∗</mo><mo stretchy=\"false\">(</mo><mi>t</mi><mi>o</mi><mi>t</mi><mi>a</mi><mi>l</mi><mi mathvariant=\"normal\">_</mi><mi>w</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi><mo>−</mo><mi>c</mi><mi>a</mi><mi>p</mi><mi>a</mi><mi>c</mi><mi>i</mi><mi>t</mi><mi>y</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">min\\{p_i,\\forall i\\}/(2*(total\\_weight-capacity))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">{</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">∀</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">}</span><span class=\"mord\">/</span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.06em;vertical-align:-0.31em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"single-point-based-iterative-search-local-search-metaheuristics-stochastic-local-search\"><a class=\"markdownIt-Anchor\" href=\"#single-point-based-iterative-search-local-search-metaheuristics-stochastic-local-search\"></a> Single Point Based Iterative Search - Local Search Metaheuristics  - Stochastic Local Search</h2>\n<h3 id=\"pseudocode-2\"><a class=\"markdownIt-Anchor\" href=\"#pseudocode-2\"></a> Pseudocode</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s0; // starting solution</span><br><span class=\"line\">s* = initialise(s0) // e.g., improve s0 or use the same repeat</span><br><span class=\"line\"></span><br><span class=\"line\">Repeat</span><br><span class=\"line\">\t// generate a new solution</span><br><span class=\"line\">    s&#x27; = makeMove(s*, memory); // choose a neighbour of s*</span><br><span class=\"line\">    accept = moveAcceptance(s*, s&#x27;, memory); // remember s_best</span><br><span class=\"line\">    if(accept) s* = s&#x27;; // else reject new solution s&#x27;</span><br><span class=\"line\">    </span><br><span class=\"line\">Until (termination conditions are satisfied)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>Move Acceptance decides whether to accept or reject the new solution considering its evaluation/quality</p>\n</li>\n<li>\n<p><strong>Accepting non-improving moves</strong> could be used as a mechanism <strong>to escape from local optimum</strong></p>\n</li>\n<li>\n<p>Effective search techniques provide a mechanism to balance <strong>exploration</strong> and <strong>exploitation</strong></p>\n<ul>\n<li>Exploration aims to <strong>prevent stagnation</strong> of search process getting <strong>trapped at a local optimum</strong></li>\n<li>Exploitation aims to <strong>greedily increase solution quality or probability</strong> , e.g., by exploiting the evaluation function</li>\n</ul>\n</li>\n</ul>\n<p><strong>Aim is to design search algorithms/metaheuristics that can</strong></p>\n<ul>\n<li>escape local optima</li>\n<li>balance exploration and exploitation</li>\n<li>make the search independent from the initial configuration</li>\n</ul>\n<h2 id=\"iterated-local-search-ils-local-search-metaheuristics-stochastic-local-search\"><a class=\"markdownIt-Anchor\" href=\"#iterated-local-search-ils-local-search-metaheuristics-stochastic-local-search\"></a> Iterated Local Search (ILS) - Local Search Metaheuristics - Stochastic Local Search</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//random or construction heuristic</span><br><span class=\"line\">s0 = GenerateInitialSolution()</span><br><span class=\"line\">s* = LocalSearch(s0) //not always used</span><br><span class=\"line\">Repeat</span><br><span class=\"line\">\t// random move</span><br><span class=\"line\">    s&#x27; = Perturbation(s*, memory)</span><br><span class=\"line\">    // hill climbing</span><br><span class=\"line\">    s&#x27; = LocalSearch(s&#x27; )</span><br><span class=\"line\">    // remember s_best</span><br><span class=\"line\">    s* = AcceptanceCriterion(s*, s&#x27;, memory) </span><br><span class=\"line\">    // the conditions that the new local optimum</span><br><span class=\"line\">    // must satisfy to replace the current solution</span><br><span class=\"line\">Until (termination conditions are satisfied)</span><br><span class=\"line\">return s*</span><br></pre></td></tr></table></figure>\n<h3 id=\"based-on-visiting-a-sequence-of-locally-optimal-solutions-by\"><a class=\"markdownIt-Anchor\" href=\"#based-on-visiting-a-sequence-of-locally-optimal-solutions-by\"></a> Based on visiting a sequence of locally optimal solutions by</h3>\n<ul>\n<li>\n<p>Perturbing the current local optimum (exploration)</p>\n<ul>\n<li>\n<p>A perturbation phase might consist of one or more steps</p>\n</li>\n<li>\n<p>The perturbation strength is crucial</p>\n<ul>\n<li>weak perturbations usually lead to shorter local search phases than strong perturbations, because the iterative improvement algorithm takes less steps to identify a local optimum</li>\n<li>Too small / weak: may generate cycles, fall back into the local optimum just visited leading to a stagnation of the search process</li>\n<li>Too big / strong: good properties of the local optima are lost , similar to a random restart of the search process</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>applying local search/hill climbing(exploitation) after starting from the modified solution</p>\n</li>\n</ul>\n<h3 id=\"acceptance-criteria\"><a class=\"markdownIt-Anchor\" href=\"#acceptance-criteria\"></a> Acceptance criteria</h3>\n<ul>\n<li>Extreme in terms of intensification: accept only improving solutions &lt;-&gt; Extreme in terms of diversification: accept any solution</li>\n<li>Other: deterministic (like threshold), probabilistic (like Simulated Annealing)</li>\n</ul>\n<h3 id=\"memory\"><a class=\"markdownIt-Anchor\" href=\"#memory\"></a> Memory</h3>\n<p>Very simple use: restart search if for a number of iterations noimproved solution is found</p>\n<h3 id=\"guidelines\"><a class=\"markdownIt-Anchor\" href=\"#guidelines\"></a> Guidelines</h3>\n<ul>\n<li>Initial solution should be to a large extent irrelevant for longer runs</li>\n<li>The interactions among perturbation strength and acceptance criterion can be particularly important\n<ul>\n<li>it determines the relative balance of intensification anddiversification</li>\n<li>large perturbations are only useful if they can be accepted</li>\n</ul>\n</li>\n<li>Advanced acceptance criteria may take into account search history,\n<ul>\n<li>e.g. by occasionally reverting to incumbent solution</li>\n</ul>\n</li>\n<li>Advanced ILS algorithms may change nature and/or strength of perturbation adaptively during search</li>\n<li>Local search should be as effective and as fast as possible.\n<ul>\n<li>Better local search generally leads to better ILS performance</li>\n</ul>\n</li>\n<li>Choose a perturbation operator whose steps cannot be easily undone by the local search</li>\n</ul>\n<div STYLE=\"page-break-after: always;\"></div>\n<h2 id=\"tabu-search-ts-local-search-metaheuristics-stochastic-local-search\"><a class=\"markdownIt-Anchor\" href=\"#tabu-search-ts-local-search-metaheuristics-stochastic-local-search\"></a> Tabu Search (TS) - Local Search Metaheuristics - Stochastic Local Search</h2>\n<h3 id=\"basic-idea\"><a class=\"markdownIt-Anchor\" href=\"#basic-idea\"></a> Basic idea</h3>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>uses history (memory structures) to escape from local minima/ maxima</p></blockquote>\n<h3 id=\"pseudocode-3\"><a class=\"markdownIt-Anchor\" href=\"#pseudocode-3\"></a> Pseudocode</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">determine initial candidate solution s</span><br><span class=\"line\"></span><br><span class=\"line\">While termination criterion is not satisfied</span><br><span class=\"line\">\tdetermine set N&#x27; of non-tabu neighbours of s</span><br><span class=\"line\">\tchoose a best improving candidate solution s&#x27; in N&#x27;</span><br><span class=\"line\">\tupdate tabu attributes based on s&#x27;</span><br><span class=\"line\">\ts = s&#x27;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>In each step, <strong>move to ‘non-tabu’ best neighbouring solution</strong> (admissible neighbours), although it may be worse than current one</p>\n</li>\n<li>\n<p>To avoid cycles, TS tries to <strong>avoid revisiting previously seen solutions</strong></p>\n</li>\n<li>\n<p>To avoid storing complete solutions, TS <strong>bases the memory on attributes of recently seen solutions</strong></p>\n</li>\n<li>\n<p>Tabu solution attributes are often <strong>defined via local search moves</strong></p>\n<ul>\n<li>\n<p>Tabu-list contains <strong>moves which have been made in the recent past</strong></p>\n</li>\n<li>\n<p><strong>Tabu tenure/tabu list length</strong>:</p>\n<p>the length of time/number of steps <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">t</span></span></span></span> for which a move is forbidden</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">t</span></span></span></span> too low - <strong>risk of cycling</strong></li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">t</span></span></span></span> too high - may <strong>restrict the search</strong> too much</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">t</span></span></span></span> = 7 <strong>has often been found sufficient to prevent cycling</strong></li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mo>=</mo><msqrt><mi>n</mi></msqrt></mrow><annotation encoding=\"application/x-tex\">t = \\sqrt{n}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.04em;vertical-align:-0.23972em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8002800000000001em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-2.76028em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.23972em;\"><span></span></span></span></span></span></span></span></span></li>\n<li>number of tabu moves: 5 ~ 9</li>\n</ul>\n</li>\n<li>\n<p>Solutions which contain tabu attributes are forbidden for a certain number of iterations</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Often, an additional aspiration criterion is used: this specifies conditions under which tabu status may be overridden (e.g. if considered step leads to improvement in incumbent solution)</p>\n<ul>\n<li>If a tabu move is smaller than the aspiration level then we accept the move (use of aspiration criteria to override tabu status)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-main-components\"><a class=\"markdownIt-Anchor\" href=\"#3-main-components\"></a> 3 main components</h3>\n<ul>\n<li>Forbidding strategy: control what enters the tabu list</li>\n<li>Freeing strategy: control what exits the tabu list and when</li>\n<li>Short-term strategy: manage interplay between the forbidding strategy and freeing strategy to select trial solutions</li>\n</ul>\n<h3 id=\"memory-2\"><a class=\"markdownIt-Anchor\" href=\"#memory-2\"></a> Memory</h3>\n<p>heavily relies on the use of an explicit memory of the search process</p>\n<ul>\n<li>systematic use of memory to guide search process</li>\n<li>memory typically contains only specific attributes of previously seen solutions</li>\n<li>simple tabu search strategies exploit only short term memory</li>\n<li>more complex tabu search strategies exploit long term memory</li>\n</ul>\n<h2 id=\"introduction-to-scheduling\"><a class=\"markdownIt-Anchor\" href=\"#introduction-to-scheduling\"></a> Introduction to Scheduling</h2>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Scheduling deals with the allocation of resources to tasks over given time periods and its goal is to optimize one or more objectives. The resources and tasks in an organization can take many different forms.</p></blockquote>\n<h3 id=\"framework-notation\"><a class=\"markdownIt-Anchor\" href=\"#framework-notation\"></a> Framework &amp; Notation</h3>\n<ul>\n<li>\n<p>jobs <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi><mo>=</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">j = 1, 2, ..., n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8388800000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> (number of jobs are assumed to be finite)</p>\n</li>\n<li>\n<p>machines <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>=</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">i = 1, 2, ..., m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8388800000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span> (number of machines are assumed to be finite)</p>\n</li>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(i, j)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">)</span></span></span></span>- processing step, or operation of job j on machine i</p>\n</li>\n<li>\n<p>scheduling problem - <strong>α | β | γ</strong></p>\n<ul>\n<li>α - machine characteristics (environments)</li>\n<li>β - processing/job characteristic</li>\n<li>γ - optimality criteria (objective to be minimised)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"sample-machine-characteristics-α\"><a class=\"markdownIt-Anchor\" href=\"#sample-machine-characteristics-α\"></a> Sample Machine Characteristics (α)</h3>\n<ul>\n<li>\n<p><strong><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span></strong> Single machine</p>\n</li>\n<li>\n<p><strong><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">Pm</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\">m</span></span></span></span></strong> Identical machines in parallel</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span> machines in parallel</li>\n<li>Job <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> requires a single operation and may be processed on any of the m machines</li>\n</ul>\n</li>\n<li>\n<p><strong><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Q</mi><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">Qm</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">Q</span><span class=\"mord mathnormal\">m</span></span></span></span></strong> Machines in parallel with different speeds</p>\n</li>\n<li>\n<p><strong><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">Rm</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\">m</span></span></span></span></strong> Unrelated machines in parallel machines have different speeds for different jobs</p>\n</li>\n</ul>\n<h3 id=\"sample-job-characteristics-β\"><a class=\"markdownIt-Anchor\" href=\"#sample-job-characteristics-β\"></a> Sample Job Characteristics (β)</h3>\n<ul>\n<li><strong>Processing time <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>p</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">p_{ij}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span></strong> - processing time of job <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> on machine <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> (if a single machine then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>p</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">p_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span>)</li>\n<li><strong>Due date <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>d</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">d_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span></strong> - committed shipping or completion (due) date of job <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span></li>\n<li><strong>Weight <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>w</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">w_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span></strong> - importance of job <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> relative to the other jobs in the system</li>\n<li><strong>Release date <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>r</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">r_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span></strong> - earliest time at which job <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> can start its processing</li>\n<li><strong>Precedence <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mi>r</mi><mi>e</mi><mi>c</mi></mrow><annotation encoding=\"application/x-tex\">prec</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span></span></span></span></strong> – Precedence relations might be given for the jobs. If <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> precedes <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi></mrow><annotation encoding=\"application/x-tex\">l</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span></span></span></span>, then starting time of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi></mrow><annotation encoding=\"application/x-tex\">l</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span></span></span></span> should be not earlier than completion time of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span>.</li>\n<li><strong>Sequence dependent setup times <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>s</mi><mrow><mi>j</mi><mi>k</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">s_{jk}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span></strong> - setup time between jobs <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span></li>\n<li><strong>Breakdowns</strong> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi><mi>r</mi><mi>k</mi><mi>d</mi><mi>w</mi><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">brkdwn</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord mathnormal\">n</span></span></span></span> - machines are not continuously available</li>\n</ul>\n<h3 id=\"sample-optimality-criteria-γ\"><a class=\"markdownIt-Anchor\" href=\"#sample-optimality-criteria-γ\"></a> Sample Optimality Criteria (γ)</h3>\n<ul>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">C_{ij}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> <strong>completion time</strong> of the operation of job <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> on machine <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span></p>\n</li>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">C_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> <strong>time</strong> when job <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> exits the system</p>\n</li>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">C_{max}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mord mathnormal mtight\">a</span><span class=\"mord mathnormal mtight\">x</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> <strong>makespan</strong> is the time difference from the start (often, t=0) to<br />\nfinish when the last job exits the system</p>\n</li>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>L</mi><mi>j</mi></msub><mo>=</mo><msub><mi>C</mi><mi>j</mi></msub><mo>−</mo><msub><mi>d</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">L_j = C_j - d_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> <strong>lateness</strong> of job <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span></p>\n</li>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>T</mi><mi>j</mi></msub><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy=\"false\">(</mo><msub><mi>C</mi><mi>j</mi></msub><mo>−</mo><msub><mi>d</mi><mi>j</mi></msub><mo separator=\"true\">,</mo><mn>0</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">T_j = max(C_j - d_j , 0)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span></span></span> <strong>tardiness</strong> of job <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span></p>\n</li>\n<li>\n<p class='katex-block katex-error' title='ParseError: KaTeX parse error: Can&#039;t use function &#039;$&#039; in math mode at position 77: …e\\\\\n\\end{cases}$̲$**unit penalty…'>U_j = \n\\begin{cases}\n1 &amp; \\text{if  } C_j &gt; d_j\\\\\n0 &amp; otherwise\\\\\n\\end{cases}$$**unit penalty** of job $j$\n\n\n\n</p>\n</li>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mi mathvariant=\"normal\">∣</mi><mi>p</mi><mi>r</mi><mi>e</mi><mi>c</mi><mi mathvariant=\"normal\">∣</mi><msub><mi>C</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub><mo>−</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">1 | prec | C_{max} - A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mord mathnormal mtight\">a</span><span class=\"mord mathnormal mtight\">x</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span></p>\n<p>A single machine, general precedence constraints, minimising makespan (maximum completion time)</p>\n</li>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mn>3</mn><mi mathvariant=\"normal\">∣</mi><msub><mi>d</mi><mi>j</mi></msub><mo separator=\"true\">,</mo><msub><mi>s</mi><mrow><mi>j</mi><mi>k</mi></mrow></msub><mi mathvariant=\"normal\">∣</mi><mo>∑</mo><msub><mi>L</mi><mi>j</mi></msub><mo>−</mo><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">P3 | d_j, s_{jk} | \\sum L_j - 3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord\">3</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">3</span></span></span></span></p>\n<p>3 identical machines, each job has a due date and sequence dependent setup times between jobs,minimising total lateness of jobs</p>\n</li>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mo>∑</mo><msub><mi>C</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">R||\\sum C_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord\">∣</span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span></p>\n<p>variable number of unrelated parallel machines, no constraints, minimising total completion time</p>\n</li>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mi mathvariant=\"normal\">∣</mi><msub><mi>d</mi><mi>j</mi></msub><mi mathvariant=\"normal\">∣</mi><mo>∑</mo><msub><mi>w</mi><mi>j</mi></msub><msub><mi>T</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">1|d_j|\\sum w_jT_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\">1</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span></p>\n<p>Given <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> jobs to be processed by a single machine, each job <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> with a due date <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>d</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">d_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> , processing time <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>p</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">p_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> , and a weight <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>w</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">w_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> , find the optimal sequencing of jobs producing the minimal weighted tardiness <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>w</mi><mi>j</mi></msub><msub><mi>T</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">w_jT_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span></p>\n</li>\n</ul>\n<h1 id=\"move-acceptance-in-local-search-metaheuristics-parameter-setting-issues\"><a class=\"markdownIt-Anchor\" href=\"#move-acceptance-in-local-search-metaheuristics-parameter-setting-issues\"></a> Move Acceptance in Local search Metaheuristics, Parameter Setting issues</h1>\n<h2 id=\"move-acceptance-methods-of-local-search-metaheuristics\"><a class=\"markdownIt-Anchor\" href=\"#move-acceptance-methods-of-local-search-metaheuristics\"></a> Move Acceptance Methods of Local Search Metaheuristics</h2>\n<img src=\"https://eumcm.com/file/65060077078b053708ced.jpg\" width=\"520\" height=\"240\" />\n<h3 id=\"parameter-setting-mechanisms-in-move-acceptance\"><a class=\"markdownIt-Anchor\" href=\"#parameter-setting-mechanisms-in-move-acceptance\"></a> Parameter setting mechanisms in Move Acceptance</h3>\n<ul>\n<li>\n<p><strong>Static</strong> - either there is no parameter to set or parameters are set toa fixed value (e.g. IoM=5 )</p>\n</li>\n<li>\n<p><strong>Dynamic</strong> - parameter values vary with respect to time/iteration count. Given the same candidate and current solutions at the same current elapsed time or iteration count, the acceptance threshold or acceptance probability would be the same irrespective of search history</p>\n<p>(e.g. <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><mi>o</mi><mi>M</mi><mo>=</mo><mi>r</mi><mi>o</mi><mi>u</mi><mi>n</mi><mi>d</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo>+</mo><mo stretchy=\"false\">(</mo><mi>i</mi><mi>t</mi><mi>e</mi><mi>r</mi><mi>c</mi><mi>u</mi><mi>r</mi><mi>r</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi mathvariant=\"normal\">/</mi><mi>i</mi><mi>t</mi><mi>e</mi><mi>r</mi><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><mn>4</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">IoM = round(1 +(itercurrent / itermax) * 4)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">d</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">4</span><span class=\"mclose\">)</span></span></span></span>)</p>\n</li>\n<li>\n<p><strong>Adaptive</strong> - Given the same candidate and current solutions at the same current elapsed time or iteration count, the acceptance threshold or acceptance probability is not guaranteed to be the same as one or more components depend on search history</p>\n<p>(e.g. if for 100 steps best solution found so far cannot be improved, then IoM++, and after any improvement, reset IoM=1)</p>\n</li>\n</ul>\n<h3 id=\"non-stochastic-basic-move-acceptance-methods\"><a class=\"markdownIt-Anchor\" href=\"#non-stochastic-basic-move-acceptance-methods\"></a> Non-stochastic &amp; Basic Move Acceptance Methods</h3>\n<ul>\n<li>Reuse the objective values of previously encountered solutions for the accept/reject decisions</li>\n<li>static\n<ul>\n<li>all moves <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>f</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo stretchy=\"false\">(</mo><mi>s</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f&#x27;(s)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.001892em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mclose\">)</span></span></span></span></li>\n<li>improving moves only <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><msup><mi>s</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo stretchy=\"false\">)</mo><mo>&lt;</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(s&#x27;) &lt; f(s)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.001892em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mclose\">)</span></span></span></span></li>\n<li>improving and equal <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><msup><mi>s</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo stretchy=\"false\">)</mo><mo>≤</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(s&#x27;) \\leq f(s)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.001892em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n</li>\n<li>dynamic: none</li>\n<li>adaptive\n<ul>\n<li><strong>Late Acceptance</strong>: compares the quality of the solution with that of <strong>the solution accepted/visited <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">L</span></span></span></span> iterations previously <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>s</mi><mrow><mi>t</mi><mo>−</mo><mi>L</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">s_{t-L}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.638891em;vertical-align:-0.208331em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.328331em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mathnormal mtight\">L</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span></span></span></span></strong>, and accepts the move if and only if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><msup><mi>s</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo stretchy=\"false\">)</mo><mo>≤</mo><mi>f</mi><mo stretchy=\"false\">(</mo><msub><mi>s</mi><mrow><mi>t</mi><mo>−</mo><mi>L</mi></mrow></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(s&#x27;) \\leq f(s_{t-L})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.001892em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.328331em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mathnormal mtight\">L</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>\n<ul>\n<li>Initialisation: assign all elements of the list to be equal to the initial cost (objective value)</li>\n<li>List implementation: List for the history of the objective values of the recent solutions is implemented as a circular queue</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"non-stochastic-threshold-move-acceptance-method\"><a class=\"markdownIt-Anchor\" href=\"#non-stochastic-threshold-move-acceptance-method\"></a> Non-stochastic &amp; Threshold Move Acceptance Method</h3>\n<p>Determine a threshold which is in the vicinity of a chosen solution quality, e.g. the quality of the best solution found so far or current solution, and accept all solutions below that threshold pseudocode for minimisation</p>\n<h4 id=\"pseudocode-for-minimisation\"><a class=\"markdownIt-Anchor\" href=\"#pseudocode-for-minimisation\"></a> Pseudocode for minimisation</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s0 = generateInitialSolution();</span><br><span class=\"line\">s, s_best = s0;</span><br><span class=\"line\">// initialise other relevant parameters if there is any</span><br><span class=\"line\">REPEAT</span><br><span class=\"line\">\ts&#x27; = makeMove(s, memory); // choose a neighbour of s*</span><br><span class=\"line\">\tthreshold = moveAcceptance-&gt;getThreshold(s, s&#x27;, memory);</span><br><span class=\"line\">\tif(f(s&#x27;) &lt;= threshold) s = s&#x27;; // else reject new solution s&#x27;</span><br><span class=\"line\">\ts_best = updateBest(s, s&#x27;); //keep track of s_best</span><br><span class=\"line\">UNTIL(termination conditions are satisfied):</span><br><span class=\"line\">RETURN s_best</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>static</p>\n<ul>\n<li>Accept a worsening solution if the worsening of the objective value is <strong>no worse than a fixed value</strong></li>\n</ul>\n</li>\n<li>\n<p>dynamic</p>\n<ul>\n<li>\n<p>Great Deluge</p>\n<img src=\"https://eumcm.com/file/9936f2d9db4bdb1c51909.jpg\" width=\"650\" height=\"220\" />\n</li>\n<li>\n<p>Flex Deluge</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Adaptive</p>\n<ul>\n<li>Record to record travel (RRT)</li>\n<li>Extended Great Deluge\n<ul>\n<li>based on Great Deluge</li>\n<li>Feedback is received during the search and decay-rate is updated/reset accordingly whenever there is no improvement for a long time</li>\n</ul>\n</li>\n<li>Modified Great Deluge</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"stochastic-move-acceptance\"><a class=\"markdownIt-Anchor\" href=\"#stochastic-move-acceptance\"></a> Stochastic Move Acceptance</h3>\n<h4 id=\"psuedocode\"><a class=\"markdownIt-Anchor\" href=\"#psuedocode\"></a> Psuedocode</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s0 = generateInitialSolution();</span><br><span class=\"line\">s, s_best = s0;</span><br><span class=\"line\">REPEAT</span><br><span class=\"line\">\ts&#x27; = makeMove(s, memory); // choose a neighbour of s</span><br><span class=\"line\">\tP = moveAcceptance-&gt;getAcceptanceProbability(s, s&#x27;, memory);</span><br><span class=\"line\">\tr = getRandomValue(); // a uniform random value between [0, 1]</span><br><span class=\"line\">\tif(f(s&#x27;).isBetterThan(f(s)) || r &lt; P) s = s&#x27;; // else reject new solution s&#x27;</span><br><span class=\"line\">\ts_bset&lt;-updateBest(s, s&#x27;); // keep track of s_best</span><br><span class=\"line\">UNTIL(termination conditions are satisfied);</span><br><span class=\"line\">RETURN s_best;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>static</p>\n<ul>\n<li>Naive Acceptance: P is fixed, e.g. if improving P = 1.0, else P = 0.5</li>\n</ul>\n</li>\n<li>\n<p>dynamic</p>\n<ul>\n<li>\n<p>Simulated Annealing : P changes in time with respect to the difference in the quality of current and previous solutions</p>\n<ul>\n<li>\n<p>advantages:</p>\n<ul>\n<li>easy to implement</li>\n<li>achieves good performance given sufficient running time</li>\n</ul>\n</li>\n<li>\n<p>drawbacks:</p>\n<ul>\n<li>requires a good parameter setting for improved performance</li>\n<li>Has interesting theoretical properties (convergence),but these are of very limited practical relevance</li>\n</ul>\n</li>\n<li>\n<p><strong>Pseudocode</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">INPUT: 𝑇0, 𝑇𝑓𝑖𝑛𝑎𝑙</span><br><span class=\"line\">𝑠0 ← 𝑔𝑒𝑛𝑒𝑟𝑎𝑡𝑒𝐼𝑛𝑖𝑡𝑖𝑎𝑙𝑆𝑜𝑙𝑢𝑡𝑖𝑜𝑛();</span><br><span class=\"line\">𝑇 ← 𝑇0; // initialise temperature to 𝑇0</span><br><span class=\"line\">S_𝑏𝑒𝑠𝑡 ← 𝑠0; 𝑠 ← 𝑠0; // set 𝑠 and S_𝑏𝑒𝑠𝑡 to initial solution</span><br><span class=\"line\">REPEAT</span><br><span class=\"line\">    𝑠′ ← 𝑝𝑒𝑟𝑡𝑢𝑟𝑏𝑎𝑡𝑖𝑜𝑛(𝑠) ; // choose a neighbouring solution of 𝑠</span><br><span class=\"line\">    Δ = 𝑓(𝑠′) − 𝑓(𝑠);</span><br><span class=\"line\">    𝑟 ← 𝑟𝑎𝑛𝑑𝑜𝑚 ∈[0,1]; // get a uniform random number in the range [0,1)</span><br><span class=\"line\">    if(Δ &lt; 0 || 𝑟 &lt; 𝑃(Δ,𝑇) ) &#123; // if solution is non-worsening or in Boltzmann probability</span><br><span class=\"line\">        s ← 𝑠′;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    S_best ← 𝑢𝑝𝑑𝑎𝑡𝑒𝐵𝑒𝑠𝑡(); // keep track of best solution</span><br><span class=\"line\">    𝑇 ← 𝑐𝑜𝑜𝑙𝑇𝑒𝑚𝑝𝑒𝑟𝑎𝑡𝑢𝑟𝑒(); // decrease the temperature according to cooling schedule</span><br><span class=\"line\">UNTIL (Termination conditions are satisfied);</span><br><span class=\"line\">Return S_𝑏𝑒𝑠𝑡;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>Accepting moves</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Δ</mi><mo>=</mo><mi>F</mi><mo stretchy=\"false\">(</mo><msub><mi>s</mi><mrow><mi>n</mi><mi>e</mi><mi>w</mi></mrow></msub><mo stretchy=\"false\">)</mo><mo>−</mo><mi>F</mi><mo stretchy=\"false\">(</mo><msub><mi>s</mi><mrow><mi>o</mi><mi>l</mi><mi>d</mi></mrow></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Δ = F(s_{new}) - F(s_{old})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">Δ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">o</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></li>\n<li>Improving moves (i.e. Δ &lt; 0, assuming minimisation, below are same) are accepted</li>\n<li>Worsening moves are accepted using the Metropolis criterion at a given temperature <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span>\n<ul>\n<li>for Δ &gt; 0 accept with a <strong>Boltzman probability</strong> of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">Δ</mi><mo separator=\"true\">,</mo><mi>T</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msup><mi>e</mi><mfrac><mrow><mo>−</mo><mi mathvariant=\"normal\">Δ</mi></mrow><mi>T</mi></mfrac></msup></mrow><annotation encoding=\"application/x-tex\">P(Δ, T) = e^{\\frac{-Δ}{T}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\">Δ</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.973465em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.973465em;\"><span style=\"top:-3.363em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8720928571428571em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span><span style=\"top:-3.2255000000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.384em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">Δ</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.344em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span></span></span></span></span></span></span></span></span></span></span></span></li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>U</mi><mo stretchy=\"false\">(</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">U(0, 1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span> generates a random number in [0, 1)</li>\n<li>accept if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>U</mi><mo stretchy=\"false\">(</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>&lt;</mo><mi>P</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">Δ</mi><mo separator=\"true\">,</mo><mi>T</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">U(0, 1) &lt; P(Δ, T)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\">Δ</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Cooling / Annealing</p>\n<ul>\n<li>\n<p>As the temperature T decreases, the probability of accepting worsening moves decreases</p>\n</li>\n<li>\n<p><strong>Starting Temperature (T0)</strong></p>\n<ul>\n<li>hot enough: to <strong>allow almost all neighbors</strong></li>\n<li>not so hot: random search for sometime</li>\n<li>Estimate a suitable starting temperature:\n<ul>\n<li>Reduce quickly to 60% of worse moves are accepted</li>\n<li>Use this as the starting temperature</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Final Temperature</strong></p>\n<ul>\n<li>Usually 0, however in practice, not necessary</li>\n<li>T is low: accepting a worse move is almost the same as T=0</li>\n<li>The stopping criteria: either be a suitably low T, or “frozen” at the current T (i.e. no worse moves are accepted)</li>\n</ul>\n</li>\n<li>\n<p><strong>Temperature Decrement</strong></p>\n<ul>\n<li><strong>Linear</strong>: $$T = T - x$$</li>\n<li><strong>Geometric</strong>: $$T = T * α$$\n<ul>\n<li>Experience: α is typically in the interval [0.9, 0.99]</li>\n</ul>\n</li>\n<li><strong>Lundy Mees</strong>: $$T = \\frac{T}{1 + βT}$$\n<ul>\n<li>One iteration at each T, but decrease T very slowly.</li>\n<li>Experience: β is typically a very small value, that is close to 0 (e.g., 0.0001)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Iterations at each temperature</strong></p>\n<ul>\n<li>One iteration at each <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span></li>\n<li>A constant number of iterations at each <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span></li>\n<li>Compromise\n<ul>\n<li>Either: a large number of iterations at a few <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span>s, or</li>\n<li>A small number of iterations at many <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span>s, or</li>\n<li>A balance between the two</li>\n</ul>\n</li>\n<li>Dynamically change the no. of iterations\n<ul>\n<li>At higher <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span>s: less no. of iterations</li>\n<li>At lower <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span>s: large no. of iterations, local optimum fully exploited</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Reheating</strong></p>\n<ul>\n<li>If stuck at a local optimum for a while, increase the current temperature with a certain rate</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>adaptive</p>\n<ul>\n<li>Simulated Annealing with reheating:<br />\nP is modified time to time causing partial restart –increasing the probability of acceptance of non-improving solutions</li>\n<li>Simulated Annealing using the best found solution so far(or in a phase) for acceptance with a cooling schedule</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"parameter-setting-issues-and-tuning-methods\"><a class=\"markdownIt-Anchor\" href=\"#parameter-setting-issues-and-tuning-methods\"></a> Parameter Setting Issues and Tuning Methods</h2>\n<h3 id=\"parameter-types\"><a class=\"markdownIt-Anchor\" href=\"#parameter-types\"></a> Parameter types</h3>\n<ul>\n<li>Categorical/symbolic/structural parameters - e.g. choice of initialisation method, choice of mutation, …</li>\n<li>Ordinal parameters - e.g. neighborhoods (e.g., small, medium,large),…</li>\n<li>Numerical/behavioural parameters\n<ul>\n<li>integer, real-valued, …</li>\n<li>e.g. population sizes, evaporation rates, …</li>\n<li>values may depend on the setting of categorical or ordinal parameters</li>\n</ul>\n</li>\n</ul>\n<img src=\"https://eumcm.com/file/1ef0591f671a2e3a587fa.png\" width=\"320\" height=\"200\" />\n<h3 id=\"parameter-setting-methods\"><a class=\"markdownIt-Anchor\" href=\"#parameter-setting-methods\"></a> Parameter Setting Methods</h3>\n<ul>\n<li>\n<p><strong>Parameter tuning (Off-line setting):</strong></p>\n<p>Finding the <strong>best initial settings for a set of parameters before the search process</strong> starts (off-line)</p>\n<p>E.g., fixing the mutation strength in ILS, mutation probability in genetic algorithms, etc.</p>\n<p>The initial parameter setting influences the performance of a metaheuristic.</p>\n<ul>\n<li>Sequential tuning</li>\n<li>Design of Experiments</li>\n<li>Meta-optimisation</li>\n</ul>\n</li>\n<li>\n<p><strong>Parameter control (Online setting):</strong></p>\n<p>Managing the settings of parameters <strong>during the search process</strong> (online) (dynamic, adaptive, self-adaptive)</p>\n<p>E.g., changing the mutation strength in ILS, changing the mutation probability in genetic algorithms during the search process</p>\n<p>Controlling parameter setting could yield a system which is not sensitive to its initial setting</p>\n<ul>\n<li>Dynamic</li>\n<li>Adaptive\n<ul>\n<li>Self-adaptive</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"parameter-tuning-methods\"><a class=\"markdownIt-Anchor\" href=\"#parameter-tuning-methods\"></a> Parameter Tuning methods</h3>\n<ul>\n<li>\n<p>Traditional approaches</p>\n<ul>\n<li>Use of an arbitrary setting</li>\n<li>Trial&amp;error with settings based on intuition</li>\n<li>Use of theoretical studies</li>\n<li>A mixture of above BOOKMARK</li>\n</ul>\n</li>\n<li>\n<p>Sequential tuning: fix parameter values successively (e.g., fix A=20 and tune B that is try {0, 0.3, 0.5, 0.8, 1.0 }}, then fixing the best setting for B from the previous trials and tune A that is try {20, 40,50, 60, 80})</p>\n</li>\n<li>\n<p>Design of experiments (DoE)</p>\n<ul>\n<li>\n<p>A systematic method (controlled experiments) to determine the relationship between controllable and uncontrollable factors (inputs to the process, variables) affecting a process(e.g. running of an algorithm), their levels (settings) and the response (output) of that process (e.g. quality of solutions obtained performance of an algorithm)</p>\n</li>\n<li>\n<p>Important outcomes are measured and analysed to determine the factors and their settings that will provide the best overall outcome</p>\n</li>\n<li>\n<p>Fractional Factorial Designs - designed to draw out valuableconclusions from fewer runs (&lt;-&gt; a number of factors is k in an n level factorial design can results in n^k runs for even a single replicate)</p>\n<ul>\n<li>Key observation: Responses are often affected by a small number of main effects and lower order interactions,while higher order interactions are relatively unimportant</li>\n</ul>\n</li>\n<li>\n<p>Sampling - whenever factorial design is not possible, sampling is performed</p>\n<ul>\n<li>\n<p><strong>random</strong></p>\n<ul>\n<li>Generate each sample point independently (M)</li>\n</ul>\n</li>\n<li>\n<p><strong>Latin Hyper-cube</strong></p>\n<ul>\n<li>Decide the number of sample points(M) for N variables and for each sample point remember in which row and column the sample point was taken</li>\n<li>\n<img src=\"https://eumcm.com/file/c1c0750b37c1c1b7d7a8c.jpg\" width=\"280\" height=\"240\" />\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Orthogonal</strong></p>\n<ul>\n<li>The sample space is divided into equally probable subspaces. Sample points simultaneously,ensuring they form an ensemble of Latin Hypercube sample</li>\n<li>\n<img src=\"https://eumcm.com/file/d6ff8f20dfbf79b13fff4.jpg\" width=\"280\" height=\"240\" />\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Taguchi Orthogonal Arrays Method</strong> for Parameter Tuning</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Meta-optimisation: use a metaheuristic to obtain “optimal”parameter settings</p>\n</li>\n<li>\n<p><strong>Taguchi Orthogonal Arrays Method</strong> for Parameter Tuning</p>\n<p>(Parameter Tuning methods - Design of experiments (DoE) - Sampling - Orthogonal)</p>\n<ul>\n<li>Aim : make a “product” or “process” less variable (more robust) in the face of variation over which we have little or no control</li>\n</ul>\n</li>\n</ul>\n<center class=\"half\">    <img src=\"https://eumcm.com/file/384c7362f7a84325affb5.jpg\" width=\"280\"/> <img src=\"https://eumcm.com/file/166eb1980c8edcca3b467.jpg\" width=\"400\"/> </center>\n<h3 id=\"parameter-control\"><a class=\"markdownIt-Anchor\" href=\"#parameter-control\"></a> Parameter Control</h3>\n<ul>\n<li>\n<p><strong>Static</strong>:</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>fixed  parameter value</p></blockquote>\n<p><code>Example</code>:  Accept a worsening solution if the worsening of the objective value is no worse than a fixed value</p>\n<ul>\n<li>\n<p><strong>Dynamic</strong>:</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>parameter value vary with respect to time/iteration count</p></blockquote>\n<p><code>Example</code>:  Great Deluge,  Flex Deluge, Simulated Annealing</p>\n</li>\n<li>\n<p><strong>Adaptive</strong>:</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>depend on search history</p></blockquote>\n<p><code>Example</code>:  Record to record travel (RRT), Extended Great Deluge, Modified Great Deluge, Simulated Annealing with reheating</p>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"evolutionary-algorithms-eas-iii-genetic-algorithms-gasmemetic-algorithms-mas-benchmark-functions\"><a class=\"markdownIt-Anchor\" href=\"#evolutionary-algorithms-eas-iii-genetic-algorithms-gasmemetic-algorithms-mas-benchmark-functions\"></a> Evolutionary Algorithms (EAs) (I/II): Genetic Algorithms (GAs),Memetic Algorithms (MAs), Benchmark functions</h1>\n<h2 id=\"evolutionary-algorithms-eas\"><a class=\"markdownIt-Anchor\" href=\"#evolutionary-algorithms-eas\"></a> Evolutionary Algorithms (EAs)</h2>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>EAs simulate natural evolution (Darwinian Evolution) of <strong>individual</strong> structures at the genetic level using the idea of <strong>survival of the fittest</strong> via processes of <strong>selection</strong>, <strong>mutation</strong>, and <strong>reproduction</strong> (recombination)</p>\n<ul>\n<li>EA includes GA, GP, EP</li>\n</ul></blockquote>\n<ul>\n<li>\n<p>An <strong>individual/chromosome</strong> represents a candidate solution for the problem at hand</p>\n</li>\n<li>\n<p>A collection of individuals currently “alive”, called <strong>population</strong> (set of individuals/chromosomes) is evolved from one <strong>generation (iteration)</strong> to another depending on the <strong>fitness</strong> of individuals in a given environment , indicating how fit an individual is, (how close it is to the optimal solution)</p>\n</li>\n<li>\n<p>Hope: last generation will contain the final solution</p>\n</li>\n</ul>\n<h3 id=\"history\"><a class=\"markdownIt-Anchor\" href=\"#history\"></a> History</h3>\n<ul>\n<li>\n<p>Genetic Algorithms</p>\n<ul>\n<li>Memetic Algorithms</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>evolves bit strings</p></blockquote>\n</li>\n<li>\n<p>Evolutionary Programming</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>evolves parameters of a program with a fixed structure</p></blockquote>\n</li>\n<li>\n<p>Evolution Strategies</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>vectors of real numbers</p></blockquote>\n</li>\n<li>\n<p>Genetic Programming</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>evolves computer programs in tree form</p></blockquote>\n<ul>\n<li>\n<p>Gene Expression Programming</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>computer programs of different sizes are encoded in linear chromosomes of fixed length</p></blockquote>\n</li>\n<li>\n<p>Grammatical Evolution</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>evolves solutions wrt a specified grammar</p></blockquote>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"key-features-of-eas\"><a class=\"markdownIt-Anchor\" href=\"#key-features-of-eas\"></a> Key Features of EAs</h3>\n<ul>\n<li>population based search approaches\n<ul>\n<li>Be independent of initial starting point(s) - Start search from many points in the search space</li>\n<li>Conduct search in parallel over the search space - implicit parallelism</li>\n</ul>\n</li>\n<li>Avoid converging to local optima</li>\n</ul>\n<h3 id=\"weakness\"><a class=\"markdownIt-Anchor\" href=\"#weakness\"></a> Weakness</h3>\n<ul>\n<li>Limited theoretical and mathematical analyses - this is a growing field of study</li>\n<li>Considered slow for online applications and even for some large offline problems</li>\n</ul>\n<h2 id=\"genetic-algorithmsgas\"><a class=\"markdownIt-Anchor\" href=\"#genetic-algorithmsgas\"></a> Genetic Algorithms(GAs)</h2>\n<h3 id=\"pseudocode-4\"><a class=\"markdownIt-Anchor\" href=\"#pseudocode-4\"></a> Pseudocode</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">begin</span><br><span class=\"line\">generate initial population; // initialise</span><br><span class=\"line\">calculate fitness values; //evaluate population</span><br><span class=\"line\">do&#123;</span><br><span class=\"line\">\tperform reproduction; //select parents</span><br><span class=\"line\">\trecombine pairs with p_c; // apply corssover</span><br><span class=\"line\">\tapply mutation with p_m; // mutate offspring</span><br><span class=\"line\">\tcalculate fitness values; // eval. population</span><br><span class=\"line\">\treplace current population;</span><br><span class=\"line\">&#125; while termination criteria not satisfied;</span><br><span class=\"line\">end</span><br></pre></td></tr></table></figure>\n<h3 id=\"basic-components-of-gas\"><a class=\"markdownIt-Anchor\" href=\"#basic-components-of-gas\"></a> Basic components of GAs</h3>\n<ul>\n<li>A genetic <strong>representation (encoding)</strong> for candidate solutions(individuals) to the problem at hand</li>\n<li>An <strong>initialisation</strong> scheme to generate the first population (set) of candidate solutions (individuals)</li>\n<li>A <strong>fitness (evaluation) function</strong> that plays the role of the environment, rating the solutions in terms of their fitness</li>\n<li>A scheme for <strong>selecting mates (parents)</strong> for recombination</li>\n<li><strong>Crossover (recombination)</strong> exchanges genetic material between mates producing offspring children</li>\n<li><strong>Mutation</strong> perturbs an individual creating a new one</li>\n<li><strong>Replacement strategy</strong> to select the surviving individuals for the next generation</li>\n<li><strong>Termination Criteria</strong></li>\n<li>Values for various parameters that GA uses (population size, probabilities of applying genetic operators, etc)</li>\n</ul>\n<h3 id=\"representation-2\"><a class=\"markdownIt-Anchor\" href=\"#representation-2\"></a> Representation</h3>\n<ul>\n<li><strong>Haploid structure</strong>: each individual contains one chromosome</li>\n<li>chromosome contain a fixed number of genes: <strong>chromosome length</strong></li>\n<li>each individual is evaluated and has an associated <strong>fitness</strong> value</li>\n<li>Traditionally <strong>binary encoding</strong> is used for each gene: <strong>Allele</strong> value <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∈</mo></mrow><annotation encoding=\"application/x-tex\">\\in</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mrel\">∈</span></span></span></span> {0, 1}</li>\n<li>a population contains a fixed number of individuals: <strong>population size</strong></li>\n<li>each iteration is referred as <strong>generation</strong></li>\n</ul>\n<h3 id=\"initialisation\"><a class=\"markdownIt-Anchor\" href=\"#initialisation\"></a> Initialisation</h3>\n<ul>\n<li>Random initialisation\n<ul>\n<li>Population size number of individuals are created randomly</li>\n<li>Each gene at a locus of an individual is assigned an allele value 0 or 1 randomly</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"fitness-calculation\"><a class=\"markdownIt-Anchor\" href=\"#fitness-calculation\"></a> Fitness calculation</h3>\n<ul>\n<li>Fitness value indicates “how fit the individual is to survive and reproduce under the current conditions”</li>\n<li>i.e. how much the current solution meets the requirements of the objective function</li>\n<li>is obtained by <strong>applying the fitness function to the individual’s chromosome</strong> (candidate solution)</li>\n<li>i.e. genotype (e.g. 101110) to phenotype (e.g.1) mapping</li>\n</ul>\n<h3 id=\"reproduction\"><a class=\"markdownIt-Anchor\" href=\"#reproduction\"></a> Reproduction</h3>\n<ul>\n<li>\n<p><strong>selecting individuals</strong> : apply selection pressure considering the fitness of individuals in the population (e.g. roulette wheel selection, tournament selection, rank selection, truncation selection, Boltzmann selection, …)</p>\n<ul>\n<li><strong>Selection pressure</strong> means the individuals with better fitness have higher chance for being selected</li>\n</ul>\n</li>\n<li>\n<p>usually <strong>2 parents</strong> (individuals/candidate solutions) are selected using the same method, which will go under the crossover operation</p>\n<h4 id=\"roulette-wheel-selection\"><a class=\"markdownIt-Anchor\" href=\"#roulette-wheel-selection\"></a> <strong>Roulette Wheel Selection</strong></h4>\n<ul>\n<li><strong>Fitness level</strong> is used to associate a probability of selection(<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mi>r</mi><mi>o</mi><msub><mi>b</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">prob_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">o</span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>) with each individual chromosome</li>\n<li>Expected number of representatives of each individual in the pool is proportional to its fitness</li>\n<li>“While candidate solutions with a higher fitness will be less likely to be eliminated, there is still a chance that they may be”</li>\n</ul>\n<h4 id=\"tournament-selection\"><a class=\"markdownIt-Anchor\" href=\"#tournament-selection\"></a> Tournament Selection</h4>\n<ul>\n<li>This method involves running a number of &quot;tournaments&quot;among randomly chosen individuals (of tour size)<br />\nselecting the one with best fitness at the end</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"crossover-recombination\"><a class=\"markdownIt-Anchor\" href=\"#crossover-recombination\"></a> Crossover / Recombination</h3>\n<ul>\n<li>\n<p>applied with a <strong>crossover probability <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>p</mi><mi>c</mi></msub></mrow><annotation encoding=\"application/x-tex\">p_c</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></strong> which in general is chosen to 1.0</p>\n<h4 id=\"one-point-crossover1ptx\"><a class=\"markdownIt-Anchor\" href=\"#one-point-crossover1ptx\"></a> One Point Crossover(1PTX)</h4>\n<ul>\n<li>Generate a random number in [0, 1), if it is smaller than a crossover probability <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>p</mi><mi>c</mi></msub></mrow><annotation encoding=\"application/x-tex\">p_c</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> Then\n<ul>\n<li>Select a random crossover site in [1, chromosome length]</li>\n<li>Split individuals at the selected site</li>\n<li>Exchange segments between pairs to form two new individuals</li>\n</ul>\n</li>\n<li>Else\n<ul>\n<li>Copy the individuals as new individuals</li>\n</ul>\n</li>\n<li>\n<img src=\"https://eumcm.com/file/60333e03ebaf18d9f138f.jpg\" width=\"320\" height=\"150\" />\n</li>\n</ul>\n<h4 id=\"2-point-crossover-2ptx\"><a class=\"markdownIt-Anchor\" href=\"#2-point-crossover-2ptx\"></a> 2 Point Crossover (2PTX)</h4>\n<h4 id=\"k-point-crossover\"><a class=\"markdownIt-Anchor\" href=\"#k-point-crossover\"></a> K-point Crossover</h4>\n<h4 id=\"uniform-crossover-ux\"><a class=\"markdownIt-Anchor\" href=\"#uniform-crossover-ux\"></a> Uniform Crossover (UX)</h4>\n<ul>\n<li>considers each bit in the parent strings for exchange with a probability of 0.5</li>\n<li>\n<img src=\"https://eumcm.com/file/3d3580928b742d7376c81.jpg\" width=\"640\" height=\"120\" />\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"mutation\"><a class=\"markdownIt-Anchor\" href=\"#mutation\"></a> Mutation</h3>\n<ul>\n<li>provides diversity and allows GA to explore different regions of the search space (escaping)</li>\n<li>Loop through <strong>all the alleles</strong> of <strong>all the individuals</strong> one by one, and if that allele is <strong>selected for mutation</strong> with a given probability you can either change it by a small amount or replace it with a new value (for binary representation, flipping a gene value)\n<ul>\n<li>Mutation rate is typically chosen to be very small (e.g. 0.001)</li>\n<li>Choosing <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>p</mi><mi>m</mi></msub></mrow><annotation encoding=\"application/x-tex\">p_m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> as (1 / chromosome length) implies on average a single gene will be mutated for an individual</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"replacement\"><a class=\"markdownIt-Anchor\" href=\"#replacement\"></a> Replacement</h3>\n<ul>\n<li>\n<p><strong>Generation gap</strong> (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">α</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span></span>) controls the fraction of the population to be replaced in each generation, where $α \\in [1/N,1.0] $Number of offspring produced at each generation is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi><mo>=</mo><mi>α</mi><mo>∗</mo><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">g=α*N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.46528em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span></p>\n</li>\n<li>\n<p><strong>(Trans-) Generational GA</strong></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span> individuals produce <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">αN</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span> offspring, so <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>N</mi><mo>+</mo><mi>α</mi><mi>N</mi><mo stretchy=\"false\">)</mo><mo>→</mo><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">(N + αN) → N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span></p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">αN</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span> replaces worst <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">αN</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span> of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span>\n<ul>\n<li>largest generation gap where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi><mo>=</mo><mn>1.0</mn></mrow><annotation encoding=\"application/x-tex\">α=1.0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">.</span><span class=\"mord\">0</span></span></span></span> yields <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi><mo>=</mo><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">g=N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span>.</li>\n<li>GA relies on improvement of average objective values from one population to another\n<ul>\n<li>It is always a good idea not to loose the best solution found so far.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>sort <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>N</mi><mo>+</mo><mi>α</mi><mi>N</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(N + αN)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span></span></span></span> and choose the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span> best (elitism)</li>\n</ul>\n</li>\n<li>\n<p><strong>Steady-State GA</strong> (g=2, that is α=2/N)</p>\n<p>Two offspring replace two individuals from the old generation.</p>\n<ul>\n<li>Method#1: two offspring replace two parents</li>\n<li>Method#2: two offspring replace worst two of the population</li>\n<li>Method#3: best two of (parents and offspring) replace two parents (elitism)</li>\n<li>Method#4: best two of (parents and offspring) replace worst two of the population (strong elitism)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"termination-criteria\"><a class=\"markdownIt-Anchor\" href=\"#termination-criteria\"></a> Termination Criteria</h3>\n<ul>\n<li>A predefined maximum number of generations is exceeded</li>\n<li>A goal is reached (e.g. Expected fitness is achieved, Population converges)</li>\n<li>Best fitness does not change for a while</li>\n<li>A condition is satisfied depending on a combination of above</li>\n</ul>\n<h3 id=\"convergence-definition\"><a class=\"markdownIt-Anchor\" href=\"#convergence-definition\"></a> Convergence - definition</h3>\n<ul>\n<li>Defined as the progression towards uniformity (individuals become alike)</li>\n<li><strong>Gene convergence</strong>: a location on a chromosome is converged when 95% of the individuals have the same gene value for that location</li>\n<li><strong>Population (Genotypic) convergence</strong>: a population is converged when all the genes have converged (all individuals are alike they might have different fitness)</li>\n<li><strong>Phenotypic Convergence</strong>: average fitness of the population approaches to the best individual in the population (all individuals have the same fitness)</li>\n</ul>\n<h2 id=\"memetic-algorithms-mas\"><a class=\"markdownIt-Anchor\" href=\"#memetic-algorithms-mas\"></a> Memetic Algorithms (MAs)</h2>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Meme: contagious piece of information</p>\n<ul>\n<li>Memes are <strong>similar to local refinement/local search</strong></li>\n<li>Gene vs. Meme\n<ul>\n<li>Memes can <strong>change, evolve using rules and time scales</strong> other than the traditional genetic ones</li>\n</ul>\n</li>\n</ul></blockquote>\n<ul>\n<li>MAs aim to <strong>improve GAs by embedding local search</strong>\n<ul>\n<li>MAs are much faster and accurate than GAs on some problems</li>\n</ul>\n</li>\n<li>MAs make use of exploration capabilities of GAs and exploitation capabilities of local search (i.e. an explicit mechanism to <strong>balance exploration and exploitation</strong>)</li>\n</ul>\n<img src=\"https://eumcm.com/file/69eaf196a80c5ddf4f089.jpg\" width=\"540\" height=\"450\" />\n<h2 id=\"benchmark-functions\"><a class=\"markdownIt-Anchor\" href=\"#benchmark-functions\"></a> Benchmark functions</h2>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>Benchmark functions</strong> serves as a testbed for performance comparison of (meta/hyper)heuristic optimisation algorithms</p></blockquote>\n<h3 id=\"why-use-benchmark-functions\"><a class=\"markdownIt-Anchor\" href=\"#why-use-benchmark-functions\"></a> Why use benchmark functions</h3>\n<ul>\n<li>Their global minimum are known</li>\n<li>They can be easily computed</li>\n<li>Each function is recognised to have certain characteristics potentially representing a different real world problem</li>\n</ul>\n<h3 id=\"classification\"><a class=\"markdownIt-Anchor\" href=\"#classification\"></a> Classification</h3>\n<ul>\n<li>\n<p><strong>Continuity (Differentiability)</strong></p>\n<ul>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo>∣</mo><mi>x</mi><mo>∣</mo></mrow><annotation encoding=\"application/x-tex\">f(x)=∣x∣</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mrel\">∣</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∣</span></span></span></span>, continuous but not differentiable</p>\n</li>\n<li>\n<p>discontinuous vs. continuous</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Dimensionality (Scalability)</strong></p>\n</li>\n<li>\n<p><strong>Modality</strong><br />\n[The number of ambiguous peaks in the function landscape]</p>\n<ul>\n<li>Unimodal</li>\n<li>Multimodal with few local minima</li>\n<li>Multimodal with exponential number of local minima</li>\n</ul>\n</li>\n<li>\n<p><strong>Separability</strong><br />\n[each variable of a function is independent of the other variables; A function of variables is separable if it can be rewritten as a sum of functions of just one variable (note: see examples for comprehensive understanding)]</p>\n<ul>\n<li>separable functions allows delta evaluation</li>\n</ul>\n<h4 id=\"examples\"><a class=\"markdownIt-Anchor\" href=\"#examples\"></a> Examples</h4>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msubsup><mi>x</mi><mi>i</mi><mn>2</mn></msubsup></mrow><annotation encoding=\"application/x-tex\">f(x) = \\sum_{i=1}^{n}x_i^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.113818em;vertical-align:-0.29971000000000003em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.804292em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-2.441336em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.258664em;\"><span></span></span></span></span></span></span></span></span></span>\n<ul>\n<li>continuous, differentiable, separable, scalable</li>\n</ul>\n</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">⌊</mo><mo>∣</mo><msub><mi>x</mi><mi>i</mi></msub><mo>∣</mo><mo stretchy=\"false\">⌋</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(x) = \\sum_{i=1}^{n}(⌊∣x_i∣⌋)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.104002em;vertical-align:-0.29971000000000003em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.804292em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mopen\">⌊</span><span class=\"mrel\">∣</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∣</span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mclose\">⌋</span><span class=\"mclose\">)</span></span></span></span>\n<ul>\n<li>discontinuous, non-differentiable, separable, scalable</li>\n</ul>\n</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo>−</mo><mn>20</mn><mi>e</mi><mi>x</mi><mi>p</mi><mo stretchy=\"false\">(</mo><mo>−</mo><mn>0.2</mn><msqrt><mrow><mn>0.5</mn><mo stretchy=\"false\">(</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msup><mi>y</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow></msqrt><mo>−</mo><mi>e</mi><mi>x</mi><mi>p</mi><mo stretchy=\"false\">(</mo><mn>0.5</mn><mo stretchy=\"false\">(</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mn>2</mn><mi>π</mi><mi>x</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mn>2</mn><mi>π</mi><mi>y</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo>+</mo><mi>e</mi><mo>+</mo><mn>20</mn></mrow><annotation encoding=\"application/x-tex\">f(x, y) = -20exp(-0.2\\sqrt{0.5(x^2+y^2)}-exp(0.5(cos(2\\pi x) +cos(2\\pi y)))+e+20</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.24em;vertical-align:-0.30499999999999994em;\"></span><span class=\"mord\">−</span><span class=\"mord\">2</span><span class=\"mord\">0</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord\">0</span><span class=\"mord\">.</span><span class=\"mord\">2</span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.935em;\"><span class=\"svg-align\" style=\"top:-3.2em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mord\">0</span><span class=\"mord\">.</span><span class=\"mord\">5</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span><span style=\"top:-2.8950000000000005em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:1.28em;\"><svg width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119\nc34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120\nc340,-704.7,510.7,-1060.3,512,-1067\nl0 -0\nc4.7,-7.3,11,-11,19,-11\nH40000v40H1012.3\ns-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232\nc-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1\ns-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26\nc-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z\nM1001 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30499999999999994em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mord\">.</span><span class=\"mord\">5</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">e</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mord\">0</span></span></span></span>\n<ul>\n<li>continuous, differentiable, non-separable, non-scalable</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"evolutionary-algorithms-eas-iiii-ma-ga-cont-multimeme-memetic-algorithms-mmas\"><a class=\"markdownIt-Anchor\" href=\"#evolutionary-algorithms-eas-iiii-ma-ga-cont-multimeme-memetic-algorithms-mmas\"></a> Evolutionary Algorithms (EAs) (II/II): MA &amp; GA (cont.), Multimeme Memetic Algorithms (MMAs)</h1>\n<h2 id=\"case-study-of-gasmas\"><a class=\"markdownIt-Anchor\" href=\"#case-study-of-gasmas\"></a> Case study of GAs/MAs</h2>\n<h3 id=\"binary-coding-vs-gray-coding\"><a class=\"markdownIt-Anchor\" href=\"#binary-coding-vs-gray-coding\"></a> Binary Coding vs. Gray Coding</h3>\n<ul>\n<li>Gray encoding ensures a <strong>Hamming distance of 1</strong> for the adjacent numbers</li>\n<li>Shown to be useful in GAs empowering the algorithm to mutate a solution in the right direction</li>\n</ul>\n<h3 id=\"binary-representation-for-encoding-permutation-permutation-basedgenetic-operators\"><a class=\"markdownIt-Anchor\" href=\"#binary-representation-for-encoding-permutation-permutation-basedgenetic-operators\"></a> Binary Representation for Encoding Permutation / Permutation basedGenetic Operators</h3>\n<div STYLE=\"page-break-after: always;\"></div>\n<h4 id=\"partially-mapped-crossover-pmx\"><a class=\"markdownIt-Anchor\" href=\"#partially-mapped-crossover-pmx\"></a> Partially Mapped Crossover (PMX)</h4>\n<img src=\"https://eumcm.com/file/b5cfe533dd63831a6b117.jpg\" width=\"420\" height=\"360\" />\n<h4 id=\"order-crossover-ox\"><a class=\"markdownIt-Anchor\" href=\"#order-crossover-ox\"></a> Order Crossover (OX)</h4>\n<img src=\"https://eumcm.com/file/95af6bb4ee083c3bffbcf.jpg\" width=\"580\" height=\"360\" />\n<div STYLE=\"page-break-after: always;\"></div>\n<h4 id=\"cycle-crossover-cx\"><a class=\"markdownIt-Anchor\" href=\"#cycle-crossover-cx\"></a> Cycle Crossover (CX)</h4>\n<img src=\"https://eumcm.com/file/dbdc49c9a08d3dc513c9e.jpg\" width=\"580\" height=\"360\" />\n<h2 id=\"multimeme-memetic-algorithms-mmas\"><a class=\"markdownIt-Anchor\" href=\"#multimeme-memetic-algorithms-mmas\"></a> Multimeme Memetic Algorithms (MMAs)</h2>\n<h3 id=\"self-adaptation\"><a class=\"markdownIt-Anchor\" href=\"#self-adaptation\"></a> Self Adaptation</h3>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Deciding which operators and settings to use on the fly whenever needed receiving feedback during the evolutionary search process</p></blockquote>\n<ul>\n<li>\n<p>i.e. co-evolve genetic and memetic material</p>\n<ul>\n<li>Multimeme Algorithm can indeed learn how to choose an operator and relevant settings through the evolutionary process (co evolution)</li>\n<li>There is a trade off as learning requires time and a memetic algorithm with a single setting could perform better</li>\n</ul>\n</li>\n<li>\n<p>Memes represent instructions for self improvement</p>\n<ul>\n<li>Specify set of rules, programs, heuristics, strategies,behaviors, etc.</li>\n</ul>\n</li>\n<li>\n<p>Meme of each operator can be combined under a memeplex</p>\n</li>\n<li>\n<p><strong>Grammar for memeplex</strong> - Compound of Memes</p>\n<img src=\"https://eumcm.com/file/4aae16cf3daedb0654dba.jpg\" width=\"680\" height=\"340\" />\n</li>\n<li>\n<p>Example</p>\n<img src=\"https://eumcm.com/file/25f0844dab5065cc2011f.jpg\" width=\"600\" height=\"350\" />\n</li>\n</ul>\n<h3 id=\"mutating-memes-during-evolution\"><a class=\"markdownIt-Anchor\" href=\"#mutating-memes-during-evolution\"></a> Mutating Memes during evolution</h3>\n<ul>\n<li>\n<p><strong>Innovation rate</strong> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><mi>R</mi><mo>∈</mo><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">IR\\in [0, 1]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72243em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span> : the probability of mutating the memes</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><mi>R</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">IR = 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span> - no innovation\n<ul>\n<li>if a meme option is not introduced in the initial generation, it will not be reintroduced again</li>\n</ul>\n</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><mi>R</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">IR=1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>\n<ul>\n<li>All different strategies implied by the available <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> memes might be equally used</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Concentration of a meme</strong> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">C_i(t)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span></p>\n<ul>\n<li>total number of individuals that carry the meme <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> at a given generation <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">t</span></span></span></span></li>\n<li>Crude measure of a meme success; gives no information about continual usage of a meme</li>\n</ul>\n</li>\n<li>\n<p><strong>Evolutionary activity of a meme</strong> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">a_i(t)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span></p>\n<ul>\n<li>the accumulation of meme concentration until a given generation</li>\n<li><span class='katex-error' title='ParseError: KaTeX parse error: Unknown column alignment: * at position 31: …{\\begin{array}{*̲*lr**}  \\int_0^…'>a_i(t) = \\left\\{\\begin{array}{**lr**}  \\int_0^t c_i(t)dt, &amp; \\text{if } c_i(t) &gt; 0 \\\\ 0, &amp; \\text{otherwise}\\\\  \\end{array}   \\right.</span></li>\n<li>Slope in a plot represents the rate of increase of a meme concentration</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"hyper-heuristics-iii-motivation-characteristics-classification-misconceptions-of-hyper-heuristics-selection-hyper-heuristic-controlling-perturbative-heuristics\"><a class=\"markdownIt-Anchor\" href=\"#hyper-heuristics-iii-motivation-characteristics-classification-misconceptions-of-hyper-heuristics-selection-hyper-heuristic-controlling-perturbative-heuristics\"></a> Hyper-heuristics (I/II): Motivation / Characteristics / Classification /Misconceptions of Hyper-heuristics, Selection Hyper-heuristic controlling Perturbative Heuristics</h1>\n<h2 id=\"hyper-heuristics\"><a class=\"markdownIt-Anchor\" href=\"#hyper-heuristics\"></a> Hyper-heuristics</h2>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>A hyper-heuristic is a search method or learning mechanism for <strong>selecting or generating heuristics</strong> to solve computationally difficult problems</p></blockquote>\n<p>A class of methodologies for cross domain (i.e. no domain knowledge) search</p>\n<img src=\"https://eumcm.com/file/c5a850f0821f19e47488a.jpg\" width=\"600\" height=\"280\" />\n<h3 id=\"motivation\"><a class=\"markdownIt-Anchor\" href=\"#motivation\"></a> Motivation</h3>\n<p>raise the level of generality of search methods / cross domain research</p>\n<h3 id=\"characteristics-of-hyper-heuristics-initial-framework\"><a class=\"markdownIt-Anchor\" href=\"#characteristics-of-hyper-heuristics-initial-framework\"></a> Characteristics of Hyper heuristics (initial framework)</h3>\n<ul>\n<li>Operate on <strong>a search space of heuristics</strong> <strong>(neighborhood operators)</strong> rather than directly on a search space of solutions</li>\n<li>Aim is to take advantage of strengths and avoid weaknesses of each heuristic (operator)</li>\n<li>No problem specific knowledge is required during the search over the heuristics (operator) space</li>\n<li>Easy to implement, practical to deploy (easy, cheap, fast)</li>\n<li>Existing (or computer generated) heuristics (operators) can be used within hyper heuristics</li>\n</ul>\n<h3 id=\"classification-of-hyper-heuristics\"><a class=\"markdownIt-Anchor\" href=\"#classification-of-hyper-heuristics\"></a> Classification of Hyper-heuristics</h3>\n<img src=\"https://eumcm.com/file/4e0ebfa0a27428e927961.jpg\" width=\"620\" height=\"280\" />\n<ul>\n<li><strong>Generation hyper-heuristics</strong></li>\n<li>automatically construct new heuristics from given components</li>\n<li><strong>Selection hyper-heuristics</strong></li>\n<li>choose and control a predefined set of heuristics</li>\n<li><strong>Offline learning hyper-heuristics</strong>\n<ul>\n<li>usually trained on a set of selected instances and then generalise to unseen instances</li>\n</ul>\n</li>\n<li><strong>Online learning hyper-heuristics</strong>\n<ul>\n<li>receive feedback during the search process while solving a given instance of a problem</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"misconceptions-about-hyper-heuristics\"><a class=\"markdownIt-Anchor\" href=\"#misconceptions-about-hyper-heuristics\"></a> Misconceptions about Hyper-heuristics</h3>\n<ul>\n<li>Hyper-heuristics do not require parameter tuning (✕)\n<ul>\n<li>require parameter tuning (unless have a parameter control mechanism)</li>\n</ul>\n</li>\n<li>Hyper-heuristics are all tested under a fair setting (HyFlex) (✕)\n<ul>\n<li>Time allocated (and instances used) for tuning - no one seems to take into account the time spent for parameter tuning, much time on tuning</li>\n</ul>\n</li>\n<li>Applying a hyper heuristic to a new domain is easy (✕)\n<ul>\n<li>the hyper-heuristic part itself is easy, but decide who is going to implement these new operators in the new domain / choose of domain-specific operators/heuristics is hard</li>\n</ul>\n</li>\n<li>Domain specific information should not be passed to the hyper-heuristics (objective value is not a domain specific information, all others are) (✕)\n<ul>\n<li><strong>objective value is domain specific information</strong>, and, the hyper-heuristic, as an interface, should allow such information to be passed, and, with domain-specific information hyper-heuristic can be more capable</li>\n</ul>\n</li>\n</ul>\n<div STYLE=\"page-break-after: always;\"></div>\n<h2 id=\"selection-hyper-heuristic-controlling-perturbative-heuristics\"><a class=\"markdownIt-Anchor\" href=\"#selection-hyper-heuristic-controlling-perturbative-heuristics\"></a> Selection Hyper-heuristic controlling Perturbative Heuristics</h2>\n<h3 id=\"a-selection-hyper-heuristic-framework-single-point-search\"><a class=\"markdownIt-Anchor\" href=\"#a-selection-hyper-heuristic-framework-single-point-search\"></a> A Selection Hyper heuristic Framework - Single Point Search</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">generate initial candidate solution p</span><br><span class=\"line\">while(termination critera not satisfied)&#123;</span><br><span class=\"line\">\tselect a heuristic (or subset of heuristic) h from &#123;H1,..., Hn&#125;</span><br><span class=\"line\">\tgenerate a new solution (or solutions) s by applying h to p</span><br><span class=\"line\">\tif(s is accepted) tehn p = s; // decide whether to accept s or not</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">return p;</span><br></pre></td></tr></table></figure>\n<img src=\"https://eumcm.com/file/a1b2b5e7afc804e4282fd.jpg\" width=\"560\" height=\"280\" />\n<h3 id=\"hyper-heuristics-flexible-interface-hyflex-multi-point-population-search\"><a class=\"markdownIt-Anchor\" href=\"#hyper-heuristics-flexible-interface-hyflex-multi-point-population-search\"></a> Hyper-heuristics Flexible Interface (HyFlex) - Multi-Point / Population Search</h3>\n<img src=\"https://eumcm.com/file/c15226efe0e1f26ee5092.jpg\" width=\"320\" height=\"280\" />\n<ul>\n<li><strong>Heuristic types</strong>: mutational (MU), ruin-recreate (RC), local search(HC), crossover (XO)</li>\n<li><strong>Parameters</strong>: intensity of mutation, depth of search</li>\n</ul>\n<h3 id=\"heuristic-operator-selection-methods\"><a class=\"markdownIt-Anchor\" href=\"#heuristic-operator-selection-methods\"></a> Heuristic (Operator) selection methods</h3>\n<ul>\n<li>\n<p><strong>Simple Random</strong> / Random Permutation - with no learning</p>\n</li>\n<li>\n<p><strong>Greedy (GR)</strong> - with learning</p>\n<ul>\n<li>Apply each low level heuristic to the candidate solution and choose the one that generates the best objective value</li>\n</ul>\n</li>\n<li>\n<p><strong>Reinforcement Learning (RL)</strong> - with learning</p>\n<ul>\n<li>A machine learning technique</li>\n<li>Concerned with how an agent ought to take actions in an environment to maximize some notion of long term reward</li>\n<li>reward and punishment</li>\n<li>Maintains a score for each heuristic</li>\n<li>If an improving move then increase (e.g. +1) other wise decrease (e.g. - 1) the score of the heuristic</li>\n</ul>\n</li>\n<li>\n<p><strong>Choice Function (CF)</strong> - with learning</p>\n<ul>\n<li>maintains a record of the performance of each heuristic with 3 criteria\n<ol>\n<li>its <strong>individual performance</strong> (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">f_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>)</li>\n<li>how well it has <strong>performed with other heuristics</strong> (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">f_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>)</li>\n<li>the <strong>elapsed time</strong> since the heuristic has been called (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mn>3</mn></msub></mrow><annotation encoding=\"application/x-tex\">f_3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>)</li>\n</ol>\n</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>F</mi><mi>n</mi></msub><mo stretchy=\"false\">(</mo><msub><mi>h</mi><mi>j</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi>α</mi><mi>n</mi></msub><msub><mi>f</mi><mn>1</mn></msub><mo stretchy=\"false\">(</mo><msub><mi>h</mi><mi>j</mi></msub><mo stretchy=\"false\">)</mo><mo>+</mo><msub><mi>β</mi><mi>n</mi></msub><msub><mi>f</mi><mn>2</mn></msub><mo stretchy=\"false\">(</mo><msub><mi>h</mi><mi>k</mi></msub><mo separator=\"true\">,</mo><msub><mi>h</mi><mi>j</mi></msub><mo stretchy=\"false\">)</mo><mo>+</mo><msub><mi>γ</mi><mi>n</mi></msub><msub><mi>f</mi><mn>3</mn></msub><mo stretchy=\"false\">(</mo><msub><mi>h</mi><mi>j</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">F_n(h_j) = \\alpha _n f_1(h_j) + \\beta _n f_2(h_k, h_j) + \\gamma _n f_3(h_j)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05556em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n</li>\n<li>\n<p>An Iterated Multi-stage Selection Hyper-heuristic</p>\n<ul>\n<li>\n<p>Crossover operators are ignored</p>\n</li>\n<li>\n<img src=\"https://eumcm.com/file/a4040c01780d10126fe00.jpg\" width=\"640\" height=\"280\" />\n</li>\n<li>\n<p>Stage 1 Hyper-heuristic (S1HH)</p>\n<ol>\n<li>\n<p>select a low level heuristic <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> with probability <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>c</mi><mi>o</mi><mi>r</mi><msub><mi>e</mi><mi>i</mi></msub><mi mathvariant=\"normal\">/</mi><msub><mo>∑</mo><mrow><mi mathvariant=\"normal\">∀</mi><mi>k</mi></mrow></msub><mi>s</mi><mi>c</mi><mi>o</mi><mi>r</mi><msub><mi>e</mi><mi>k</mi></msub></mrow><annotation encoding=\"application/x-tex\">score_i / \\sum _{\\forall k} score_k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0497100000000001em;vertical-align:-0.29971000000000003em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">/</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1863979999999999em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∀</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></p>\n</li>\n<li>\n<p>apply the chosen heuristic</p>\n</li>\n<li>\n<p>Accept/reject based on an adaptive threshold acceptance method</p>\n<img src=\"https://eumcm.com/file/050484658a0eb2becea99.jpg\" width=\"440\" height=\"200\" />\n</li>\n<li>\n<p>Stage 1 terminates if a duration of is exceeded without any improvement</p>\n</li>\n</ol>\n</li>\n<li>\n<p>Stage 2 Hyper-heuristic (S2HH)</p>\n<ul>\n<li>Given <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span> LLHs, pair up all (which increase the number of LLHs to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi><mo>+</mo><msup><mi>N</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">N + N^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span>), then reduce the number of LLHs (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi><mo>+</mo><msup><mi>N</mi><mn>2</mn></msup><mo>→</mo><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">N+N^2\\rightarrow n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>)  and assign probabilities</li>\n<li>parameter tuning needed (6 parameters for this specific framework)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"hyper-heuristics-iiii-selection-hyper-heuristic-controlling-constructive-heuristics-generation-hyper-heuristics-genetic-programming-gp\"><a class=\"markdownIt-Anchor\" href=\"#hyper-heuristics-iiii-selection-hyper-heuristic-controlling-constructive-heuristics-generation-hyper-heuristics-genetic-programming-gp\"></a> Hyper-heuristics (II/II): Selection Hyper-heuristic controlling Constructive Heuristics, Generation Hyper-heuristics (Genetic Programming (GP))</h1>\n<h2 id=\"selection-hyper-heuristic-controlling-constructive-heuristics\"><a class=\"markdownIt-Anchor\" href=\"#selection-hyper-heuristic-controlling-constructive-heuristics\"></a> Selection Hyper-heuristic controlling Constructive Heuristics</h2>\n<h3 id=\"a-graph-based-hyper-heuristic-ghh\"><a class=\"markdownIt-Anchor\" href=\"#a-graph-based-hyper-heuristic-ghh\"></a> A Graph-based Hyper-heuristic (GHH)</h3>\n<ul>\n<li>\n<p>Graph colouring problem - no two adjacent vertices share the same colour (vertex colouring)</p>\n<ul>\n<li>\n<p>minimum colouring problem (an NP-hard problem)</p>\n</li>\n<li>\n<p><strong>degree of a vertex</strong>: number of edges connected to that vertex</p>\n</li>\n<li>\n<p><strong>saturation degree of a vertex</strong>: number of differently coloured vertices already connected to it</p>\n<ul>\n<li>(note : 1. coloured; 2.differently)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"graph-colouring-heuristics\"><a class=\"markdownIt-Anchor\" href=\"#graph-colouring-heuristics\"></a> Graph colouring heuristics</h3>\n<ul>\n<li>largest degree\n<ol>\n<li>sort the vertices from largest degree to smallest</li>\n<li>colour the first vertex in the list with an colour\n<ul>\n<li>(starting with the first) that is different than its neighbours</li>\n</ul>\n</li>\n<li>delete the vertex from the list go to the previous step unless no vertices left</li>\n</ol>\n</li>\n<li>saturation degree\n<ul>\n<li>use saturation degree instead of degree in largest degree</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"case-study-examination-timetabling-problem\"><a class=\"markdownIt-Anchor\" href=\"#case-study-examination-timetabling-problem\"></a> Case study: examination timetabling problem</h3>\n<ul>\n<li>\n<p>A general framework employing a set of low level constructive graph colouring heuristics</p>\n<ul>\n<li>Low level heuristics: sequential methods that order events by the difficulties of assigning them</li>\n</ul>\n</li>\n<li>\n<p>model the problem as a graph colouring problem</p>\n<ul>\n<li>Nodes: exams</li>\n<li>Edges: adjacent exams have common students</li>\n<li>Colours: time periods</li>\n<li>Objective: assign colours (time periods) to nodes (exams),adjacent nodes with different colour, minimising time periods used</li>\n</ul>\n</li>\n<li>\n<p>Select low level heuristics</p>\n<ul>\n<li>\n<img src=\"https://eumcm.com/file/d510ea0ef6e2f4e182a0e.jpg\" width=\"420\" height=\"200\" />\n</li>\n</ul>\n</li>\n<li>\n<p>a specific pseudo-code (i.e. only one specific way) of <strong>Tabu Search graph based hyper-heuristic</strong></p>\n<ul>\n<li>(note:‘events’=‘exams’)</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">initial heuristic list hl = &#123;h1, h2, h3,..., hk&#125;</span><br><span class=\"line\">// Begin of Tabu Search</span><br><span class=\"line\">for i = 0 to i = (5 * the number of events) // number of iterations</span><br><span class=\"line\">\th = change two heuristic in hl // a move in Tabu search</span><br><span class=\"line\">\tif h does not match a heuristic list in &#x27;failed list&#x27;</span><br><span class=\"line\">\t\tif h is not in the tabu list // h is not recently visited</span><br><span class=\"line\">\t\tfor j = 0 to j = k // h is used to construct a complete solution</span><br><span class=\"line\">\t\t\tschedule the first 2 events in the event list ordered using hj</span><br><span class=\"line\">\t\t\tif no feasible solution can be obtained</span><br><span class=\"line\">\t\t\t\tstore h into &#x27;failed list&#x27; // update &quot;failed list&quot;</span><br><span class=\"line\">\t\t\telse if cost of solution c &lt; the best cost c_g obtained</span><br><span class=\"line\">\t\t\t\tsave the best solution, c_g = c //keep the best solution</span><br><span class=\"line\">\t\t\t\tadd h into the tabu list</span><br><span class=\"line\">\t\t\t\tremove the first item from the tabu list if its length &gt; 9</span><br><span class=\"line\">\t\thl = h</span><br><span class=\"line\">\t//end if</span><br><span class=\"line\">\tDeepest descent on the complete solution obtained</span><br><span class=\"line\">//end of Tabu search</span><br><span class=\"line\">output the best solution with cost of c_g</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Neighborhood operator: randomly change two heuristics in the heuristic list</li>\n<li>Objective function: quality of solutions built by the corresponding heuristic list</li>\n<li>Tabu list: visits to the same heuristic lists forbidden</li>\n</ul>\n</li>\n<li>\n<p>other high-level search strategies: steepest descent, Variable neighborhood search -&gt; best performing, iterated steepest descent, …</p>\n</li>\n</ul>\n<h2 id=\"generation-hyper-heuristics\"><a class=\"markdownIt-Anchor\" href=\"#generation-hyper-heuristics\"></a> Generation Hyper-heuristics</h2>\n<h3 id=\"genetic-programminggp\"><a class=\"markdownIt-Anchor\" href=\"#genetic-programminggp\"></a> Genetic programming(GP)</h3>\n<ul>\n<li>\n<p>GP provides a method for <strong>automatically creating a working computer program from a high level problem statement of the problem</strong></p>\n<ul>\n<li>i.e. program synthesis / program induction</li>\n</ul>\n</li>\n<li>\n<p>GP iteratively transforms a population of computer programs into a new generation of programs via evolutionary process</p>\n</li>\n<li>\n<p>represent a computer program as a parse tree</p>\n<img src=\"https://eumcm.com/file/24604b2fc7df5668cf48a.jpg\" width=\"240\" height=\"200\" />\n</li>\n<li>\n<p>GP is an evolutionary algorithm containing the same <strong>algorithmic components</strong> , including</p>\n<ul>\n<li><strong>Random generation of the initial population</strong> of possible solutions (programs)\n<ol>\n<li>Randomly generate a program that takes two (or more) arguments and uses basic arithmetic to return an answer\n<ul>\n<li>Function set = <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><mo>+</mo><mo separator=\"true\">,</mo><mo>−</mo><mo separator=\"true\">,</mo><mo>∗</mo><mi mathvariant=\"normal\">/</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{+, -, * /\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">+</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">−</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">∗</span><span class=\"mord\">/</span><span class=\"mclose\">}</span></span></span></span></li>\n<li>Terminal set = <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><mi>i</mi><mi>n</mi><mi>t</mi><mi>e</mi><mi>g</mi><mi>e</mi><mi>r</mi><mi>s</mi><mo separator=\"true\">,</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{integers, X, Y\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">s</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">}</span></span></span></span></li>\n</ul>\n</li>\n<li>Randomly select either a function or a terminal to represent our program</li>\n<li>If a function was selected, recursively generate random programs to act as arguments</li>\n</ol>\n</li>\n<li><strong>Genetic crossover</strong> of two promising solutions to create new possible solutions (programs)\n<ol>\n<li>Pick a random node in each program</li>\n<li>Swap the two nodes</li>\n</ol>\n</li>\n<li><strong>Mutation</strong> of promising solutions to create new possible solutions (programs)\n<ol>\n<li>First pick a random node</li>\n<li>Delete the node and its children, and replace with a randomly generated program</li>\n</ol>\n</li>\n<li><strong>Fitness measure</strong> that is used to evaluate a given evolved program\n<ul>\n<li>GP is often operated in a train and test fashion training on selected sample instances could take long time while application to unseen instances is generally fast</li>\n<li>Each tree generated by GP can be evaluated using an indicator showing how good it is in building high quality solutions to the sample problem instances, such as, mean quality of solutions over the sample instances</li>\n</ul>\n</li>\n<li><strong>Termination criteria</strong></li>\n</ul>\n</li>\n<li>\n<p><strong>Case study: Genetic Programming for Packing</strong></p>\n<ul>\n<li>Error: GP at a specific time (note: ‘%’ should be ‘/’)</li>\n</ul>\n<center class=\"half\">    <img src=\"https://eumcm.com/file/7f5025f04079af467cd08.png\" width=\"390\"/> <img src=\"https://eumcm.com/file/4aa0fdda89aa312a5981a.jpg\" width=\"370\"/> </center>\n<ul>\n<li>Now\n<ul>\n<li>Now putting the item of size 70 into the bin</li>\n<li>calculate the fitness measure based on the program,</li>\n<li>find the max fitness value</li>\n<li>Next put item of size 70 into bin 4</li>\n<li>Next start search for item of size 85</li>\n</ul>\n</li>\n<li>after putting all items in bins (i.e. the program finishes on the test instance)\n<ul>\n<li>record number of bins used and compare with the best</li>\n<li>then do crossover / mutation …for new programs</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<div STYLE=\"page-break-after: always;\"></div>\n<h1 id=\"advanced-topics\"><a class=\"markdownIt-Anchor\" href=\"#advanced-topics\"></a> Advanced topics</h1>\n<h2 id=\"case-study-policy-matrix-evolution-for-generation-of-heuristics-on-1d-online-bin-packing-problem\"><a class=\"markdownIt-Anchor\" href=\"#case-study-policy-matrix-evolution-for-generation-of-heuristics-on-1d-online-bin-packing-problem\"></a> Case study: Policy Matrix Evolution for Generation of Heuristics on 1D Online Bin Packing Problem</h2>\n<h3 id=\"index-policy\"><a class=\"markdownIt-Anchor\" href=\"#index-policy\"></a> Index Policy</h3>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Each choice option is given a <strong>score</strong>, or “index value” independently of the other options</p></blockquote>\n<ul>\n<li>index policies for 1D online bin packing\n<ul>\n<li>score of bin is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>r</mi><mo separator=\"true\">,</mo><mi>s</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(r, s)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mclose\">)</span></span></span></span> where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi></mrow><annotation encoding=\"application/x-tex\">r</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span></span></span></span> is the remaining capacity of bin and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span></span></span></span> is item size</li>\n<li>Given a new item of size then place into bin with largest value of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>r</mi><mo separator=\"true\">,</mo><mi>s</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(r, s)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"open-close\"><a class=\"markdownIt-Anchor\" href=\"#open-close\"></a> Open / Close</h3>\n<ul>\n<li>A new empty bin is always available ( open )</li>\n<li>A bin is closed if it can take no more items\n<ul>\n<li>e.g. if residual space is smaller than size of any item</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"potential-general-method-for-1d-online-bin-packing\"><a class=\"markdownIt-Anchor\" href=\"#potential-general-method-for-1d-online-bin-packing\"></a> Potential General Method for 1D Online Bin Packing</h3>\n<ul>\n<li>\n<p>(i.e. method to assign a new item upon its arrival to one of the open bins)</p>\n</li>\n<li>\n<p>on arrival of new item, inspect the current set of open bins, and simultaneously use the entire set of residual spaces in the open bins to pick where to place the new item</p>\n</li>\n<li>\n<p>difficult expensive (in general)</p>\n</li>\n</ul>\n<h3 id=\"generating-heuristic\"><a class=\"markdownIt-Anchor\" href=\"#generating-heuristic\"></a> Generating Heuristic</h3>\n<ul>\n<li>Within search methods, often have score functions, “index functions” to help make some choice\n<ul>\n<li>difficult to invent successful ones; want to <strong>automate</strong> this</li>\n</ul>\n</li>\n<li>GP approach: evolve arithmetic score functions\n<ul>\n<li>Use Genetic Programming to learn <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>r</mi><mo separator=\"true\">,</mo><mi>s</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(r,s)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mclose\">)</span></span></span></span></li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>r</mi><mo separator=\"true\">,</mo><mi>s</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(r,s)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mclose\">)</span></span></span></span> is represented as arithmetic function tree</li>\n<li>Automatically creates functions that at least match FF, BF</li>\n</ul>\n</li>\n<li>Challenge:\n<ul>\n<li>is hard to understand</li>\n<li>potentially biased because of the choice of representation</li>\n<li>some perfectly good functions might have “bloated” representations</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"matrix-view-of-policiesheuristics\"><a class=\"markdownIt-Anchor\" href=\"#matrix-view-of-policiesheuristics\"></a> Matrix View of Policies/Heuristics</h3>\n<ul>\n<li>\n<p>Since all item sizes (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span></span></span></span>) and residual capacities (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi></mrow><annotation encoding=\"application/x-tex\">r</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span></span></span></span>) are integer,then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>r</mi><mo separator=\"true\">,</mo><mi>s</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(r,s)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mclose\">)</span></span></span></span> is simply a large (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo>∗</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C*C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span>) matrix <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo stretchy=\"false\">(</mo><mi>r</mi><mo separator=\"true\">,</mo><mi>s</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">M(r,s)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mclose\">)</span></span></span></span>of parameter values</p>\n<img src=\"https://eumcm.com/file/016ee6a1eebb7a511ce1d.jpg\" width=\"480\" height=\"260\" />\n</li>\n<li>\n<p><strong>Uniform (random) Instances</strong></p>\n<ul>\n<li>problem generator on Uniform Bin Packing Problems: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>U</mi><mi>B</mi><mi>P</mi><mo stretchy=\"false\">(</mo><mi>C</mi><mo separator=\"true\">,</mo><msub><mi>s</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub><mo separator=\"true\">,</mo><msub><mi>s</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub><mo separator=\"true\">,</mo><mi>N</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">UBP(C,s_{min}, s_{max}, N )</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mord mathnormal mtight\">a</span><span class=\"mord mathnormal mtight\">x</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span></span></span></span></li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> - bin capacity</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span> number of items with integer sizes taken randomly from range <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><msub><mi>s</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub><mo separator=\"true\">,</mo><msub><mi>s</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[s_{min}, s_{max}]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mord mathnormal mtight\">a</span><span class=\"mord mathnormal mtight\">x</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span></li>\n</ul>\n</li>\n<li>\n<p><strong>Creating Heuristics via Many Parameters</strong> (CHAMP)</p>\n<ul>\n<li>\n<p>Basic idea:</p>\n<ul>\n<li>Take values in matrix <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo stretchy=\"false\">(</mo><mi>r</mi><mo separator=\"true\">,</mo><mi>s</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">M(r,s)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mclose\">)</span></span></span></span> to be integers</li>\n<li>Do (meta-)heuristic search to find good choices for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo stretchy=\"false\">(</mo><mi>r</mi><mo separator=\"true\">,</mo><mi>s</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">M(r,s)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mclose\">)</span></span></span></span>: Evaluation is by simulation</li>\n</ul>\n</li>\n<li>\n<p>Original Expectation</p>\n<ul>\n<li>the matrix will tweak the functions from GP and might slightly improve performance</li>\n</ul>\n</li>\n<li>\n<p>Potential expected disadvantages</p>\n<ul>\n<li>matrices can be much more verbose than functions</li>\n<li>they fail to take into account of the good structure captured by functions</li>\n</ul>\n<img src=\"https://eumcm.com/file/290ed6110b075fb54b543.jpg\" width=\"480\" height=\"260\" />\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Conclusion</strong></p>\n<ul>\n<li>Policies exist that out-perform standard heuristics</li>\n<li>Finding the policies is easier than expected</li>\n<li>There are many different policies with similar performance</li>\n<li>The policies are “weirder” than expected\n<ul>\n<li>The good policies could have “random” structures</li>\n<li>Not necessarily easy to capture with an algebraic function of GP</li>\n</ul>\n</li>\n<li>The results can be “analysed” (inspected) to produce simple policies that out-perform standard ones\n<ul>\n<li>and that then scale to larger problems</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"a-data-science-improved-hyper-heuristic\"><a class=\"markdownIt-Anchor\" href=\"#a-data-science-improved-hyper-heuristic\"></a> A Data Science Improved Hyper-heuristic</h2>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Many real-world data are multidimensional</p>\n<ul>\n<li>Very high-dimensional (big) with a large amount of redundancy</li>\n</ul></blockquote>\n<h3 id=\"proposed-approach-ideas\"><a class=\"markdownIt-Anchor\" href=\"#proposed-approach-ideas\"></a> Proposed Approach – Ideas</h3>\n<ul>\n<li>The balance between exploration and exploitation is crucial</li>\n<li>Mix move acceptance methods</li>\n<li>Use machine learning to partition the low level heuristics associated with each method</li>\n</ul>\n<h3 id=\"summary\"><a class=\"markdownIt-Anchor\" href=\"#summary\"></a> Summary</h3>\n<ul>\n<li>Hyper-heuristic research originated from a job shop scheduling application and has been rapidly growing since then.</li>\n<li>Generation hyper-heuristics are commonly used in the area\n<ul>\n<li>Train and test fashion\n<ul>\n<li>Does the selected subset of training instances is sufficiently representative of the test set?</li>\n<li>Training is time-consuming (delta/incremental evaluation, surrogate functions)</li>\n</ul>\n</li>\n<li>The generated/evolved heuristics might not be easy to interpret, yet they can outperform human designed heuristics</li>\n</ul>\n</li>\n<li>There is empirical evidence that machine learning/analytics/ data science help to improve the hyper-heuristic search process\n<ul>\n<li>Problem features vs solution/state features</li>\n<li>Offline versus online learning – Life long learning</li>\n</ul>\n</li>\n<li>There is still a lack of benchmarks</li>\n<li>Automated design of search methodologies is extremely challenging\n<ul>\n<li>Addressed in almost complete absence of a mathematical and theoretical understanding</li>\n</ul>\n</li>\n</ul>\n","feature":false,"text":" Introduction, Heuristic search (introduction), Pseudo-random numbers Preliminar...","permalink":"/post/aim","photos":[],"count_time":{"symbolsCount":"66k","symbolsTime":"1:01"},"categories":[{"name":"Notes","slug":"Notes","count":4,"path":"api/categories/Notes.json"}],"tags":[{"name":"AI","slug":"AI","count":1,"path":"api/tags/AI.json"},{"name":"Heuristics","slug":"Heuristics","count":1,"path":"api/tags/Heuristics.json"},{"name":"Optimization","slug":"Optimization","count":1,"path":"api/tags/Optimization.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#introduction-heuristic-search-introduction-pseudo-random-numbers\"><span class=\"toc-text\"> Introduction, Heuristic search (introduction), Pseudo-random numbers</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#preliminaries\"><span class=\"toc-text\"> Preliminaries</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#decision-support\"><span class=\"toc-text\"> Decision support</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#system\"><span class=\"toc-text\"> System</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#solving-problems-by-searching\"><span class=\"toc-text\"> Solving problems by searching</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#solving-an-mathematical-optimisation-problem-steps\"><span class=\"toc-text\"> Solving an (mathematical) optimisation problem - steps</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#optimization\"><span class=\"toc-text\"> Optimization</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#problem-and-problem-instance\"><span class=\"toc-text\"> Problem and Problem Instance</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#combinatorial-optimization-problems-cop\"><span class=\"toc-text\"> Combinatorial optimization problems (COP)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#optimizationsearch-methods\"><span class=\"toc-text\"> Optimization&#x2F;Search Methods</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#search-paradigms\"><span class=\"toc-text\"> Search Paradigms</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#heuristic-searchoptimization\"><span class=\"toc-text\"> Heuristic Search&#x2F;Optimization</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#heuristic-search-methods\"><span class=\"toc-text\"> Heuristic Search Methods</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#case-study-traveling-salesman-problem-tsp\"><span class=\"toc-text\"> Case study: Traveling Salesman Problem (TSP)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#drawbacks-of-heuristic-search\"><span class=\"toc-text\"> Drawbacks of Heuristic Search</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#pseudo-random-numbers\"><span class=\"toc-text\"> Pseudo-random numbers</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#some-problems-with-pseudo-random-numbers\"><span class=\"toc-text\"> Some problems with pseudo-random numbers</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#components-of-heuristic-search-hill-climbing-hc-performance-analysis\"><span class=\"toc-text\"> Components of heuristic search, Hill climbing (HC) , Performance analysis</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#main-components-of-heuristic-search-methods\"><span class=\"toc-text\"> Main components of heuristic search methods</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#representation\"><span class=\"toc-text\"> Representation</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#characteristics\"><span class=\"toc-text\"> Characteristics</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#example\"><span class=\"toc-text\"> Example</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#evaluation-function\"><span class=\"toc-text\"> Evaluation function</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#evaluation-function-delta-incremental-evaluation\"><span class=\"toc-text\"> Evaluation Function - Delta (Incremental) Evaluation</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#neighborhoods\"><span class=\"toc-text\"> Neighborhoods</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#example-neighborhood-for-binary-representation\"><span class=\"toc-text\"> Example neighborhood for binary representation:</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#summary-of-components\"><span class=\"toc-text\"> Summary of components</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#hill-climbing-algorithms\"><span class=\"toc-text\"> Hill climbing algorithms</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#search-paradigm\"><span class=\"toc-text\"> Search paradigm</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#minimisation-problem-maximisation-problem\"><span class=\"toc-text\"> Minimisation problem &amp; Maximisation problem</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#pseudocode\"><span class=\"toc-text\"> Pseudocode</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#note-of-algorithm\"><span class=\"toc-text\"> Note of algorithm</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#simple-hill-climbing-heuristic\"><span class=\"toc-text\"> Simple hill climbing heuristic</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#hill-climbing-vs-random-walk\"><span class=\"toc-text\"> Hill climbing vs. Random walk</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#advantage\"><span class=\"toc-text\"> Advantage:</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#disadvantage\"><span class=\"toc-text\"> Disadvantage:</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#question-example\"><span class=\"toc-text\"> Question Example</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#statistical-tests\"><span class=\"toc-text\"> Statistical tests</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#boxplots\"><span class=\"toc-text\"> Boxplots</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#notched-boxplots\"><span class=\"toc-text\"> Notched boxplots</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#progress-plot-per-instance\"><span class=\"toc-text\"> Progress plot - per instance</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#metaheuristic\"><span class=\"toc-text\"> Metaheuristic</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#components-of-metaheuristic\"><span class=\"toc-text\"> Components of metaheuristic</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#mechanism-for-escaping-from-local-optima\"><span class=\"toc-text\"> Mechanism for escaping from local optima</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#stopping-conditions-examples\"><span class=\"toc-text\"> Stopping conditions (examples)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#deal-with-infeasible-solution\"><span class=\"toc-text\"> Deal with (in)feasible solution</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#single-point-based-iterative-search-local-search-metaheuristics-stochastic-local-search\"><span class=\"toc-text\"> Single Point Based Iterative Search - Local Search Metaheuristics  - Stochastic Local Search</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#pseudocode-2\"><span class=\"toc-text\"> Pseudocode</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#iterated-local-search-ils-local-search-metaheuristics-stochastic-local-search\"><span class=\"toc-text\"> Iterated Local Search (ILS) - Local Search Metaheuristics - Stochastic Local Search</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#based-on-visiting-a-sequence-of-locally-optimal-solutions-by\"><span class=\"toc-text\"> Based on visiting a sequence of locally optimal solutions by</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#acceptance-criteria\"><span class=\"toc-text\"> Acceptance criteria</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#memory\"><span class=\"toc-text\"> Memory</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#guidelines\"><span class=\"toc-text\"> Guidelines</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#tabu-search-ts-local-search-metaheuristics-stochastic-local-search\"><span class=\"toc-text\"> Tabu Search (TS) - Local Search Metaheuristics - Stochastic Local Search</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#basic-idea\"><span class=\"toc-text\"> Basic idea</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#pseudocode-3\"><span class=\"toc-text\"> Pseudocode</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-main-components\"><span class=\"toc-text\"> 3 main components</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#memory-2\"><span class=\"toc-text\"> Memory</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#introduction-to-scheduling\"><span class=\"toc-text\"> Introduction to Scheduling</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#framework-notation\"><span class=\"toc-text\"> Framework &amp; Notation</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#sample-machine-characteristics-%CE%B1\"><span class=\"toc-text\"> Sample Machine Characteristics (α)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#sample-job-characteristics-%CE%B2\"><span class=\"toc-text\"> Sample Job Characteristics (β)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#sample-optimality-criteria-%CE%B3\"><span class=\"toc-text\"> Sample Optimality Criteria (γ)</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#move-acceptance-in-local-search-metaheuristics-parameter-setting-issues\"><span class=\"toc-text\"> Move Acceptance in Local search Metaheuristics, Parameter Setting issues</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#move-acceptance-methods-of-local-search-metaheuristics\"><span class=\"toc-text\"> Move Acceptance Methods of Local Search Metaheuristics</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#parameter-setting-mechanisms-in-move-acceptance\"><span class=\"toc-text\"> Parameter setting mechanisms in Move Acceptance</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#non-stochastic-basic-move-acceptance-methods\"><span class=\"toc-text\"> Non-stochastic &amp; Basic Move Acceptance Methods</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#non-stochastic-threshold-move-acceptance-method\"><span class=\"toc-text\"> Non-stochastic &amp; Threshold Move Acceptance Method</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#pseudocode-for-minimisation\"><span class=\"toc-text\"> Pseudocode for minimisation</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#stochastic-move-acceptance\"><span class=\"toc-text\"> Stochastic Move Acceptance</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#psuedocode\"><span class=\"toc-text\"> Psuedocode</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#parameter-setting-issues-and-tuning-methods\"><span class=\"toc-text\"> Parameter Setting Issues and Tuning Methods</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#parameter-types\"><span class=\"toc-text\"> Parameter types</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#parameter-setting-methods\"><span class=\"toc-text\"> Parameter Setting Methods</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#parameter-tuning-methods\"><span class=\"toc-text\"> Parameter Tuning methods</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#parameter-control\"><span class=\"toc-text\"> Parameter Control</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#evolutionary-algorithms-eas-iii-genetic-algorithms-gasmemetic-algorithms-mas-benchmark-functions\"><span class=\"toc-text\"> Evolutionary Algorithms (EAs) (I&#x2F;II): Genetic Algorithms (GAs),Memetic Algorithms (MAs), Benchmark functions</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#evolutionary-algorithms-eas\"><span class=\"toc-text\"> Evolutionary Algorithms (EAs)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#history\"><span class=\"toc-text\"> History</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#key-features-of-eas\"><span class=\"toc-text\"> Key Features of EAs</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#weakness\"><span class=\"toc-text\"> Weakness</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#genetic-algorithmsgas\"><span class=\"toc-text\"> Genetic Algorithms(GAs)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#pseudocode-4\"><span class=\"toc-text\"> Pseudocode</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#basic-components-of-gas\"><span class=\"toc-text\"> Basic components of GAs</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#representation-2\"><span class=\"toc-text\"> Representation</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#initialisation\"><span class=\"toc-text\"> Initialisation</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#fitness-calculation\"><span class=\"toc-text\"> Fitness calculation</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#reproduction\"><span class=\"toc-text\"> Reproduction</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#roulette-wheel-selection\"><span class=\"toc-text\"> Roulette Wheel Selection</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#tournament-selection\"><span class=\"toc-text\"> Tournament Selection</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#crossover-recombination\"><span class=\"toc-text\"> Crossover &#x2F; Recombination</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#one-point-crossover1ptx\"><span class=\"toc-text\"> One Point Crossover(1PTX)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-point-crossover-2ptx\"><span class=\"toc-text\"> 2 Point Crossover (2PTX)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#k-point-crossover\"><span class=\"toc-text\"> K-point Crossover</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#uniform-crossover-ux\"><span class=\"toc-text\"> Uniform Crossover (UX)</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#mutation\"><span class=\"toc-text\"> Mutation</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#replacement\"><span class=\"toc-text\"> Replacement</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#termination-criteria\"><span class=\"toc-text\"> Termination Criteria</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#convergence-definition\"><span class=\"toc-text\"> Convergence - definition</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#memetic-algorithms-mas\"><span class=\"toc-text\"> Memetic Algorithms (MAs)</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#benchmark-functions\"><span class=\"toc-text\"> Benchmark functions</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#why-use-benchmark-functions\"><span class=\"toc-text\"> Why use benchmark functions</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#classification\"><span class=\"toc-text\"> Classification</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#examples\"><span class=\"toc-text\"> Examples</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#evolutionary-algorithms-eas-iiii-ma-ga-cont-multimeme-memetic-algorithms-mmas\"><span class=\"toc-text\"> Evolutionary Algorithms (EAs) (II&#x2F;II): MA &amp; GA (cont.), Multimeme Memetic Algorithms (MMAs)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#case-study-of-gasmas\"><span class=\"toc-text\"> Case study of GAs&#x2F;MAs</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#binary-coding-vs-gray-coding\"><span class=\"toc-text\"> Binary Coding vs. Gray Coding</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#binary-representation-for-encoding-permutation-permutation-basedgenetic-operators\"><span class=\"toc-text\"> Binary Representation for Encoding Permutation &#x2F; Permutation basedGenetic Operators</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#partially-mapped-crossover-pmx\"><span class=\"toc-text\"> Partially Mapped Crossover (PMX)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#order-crossover-ox\"><span class=\"toc-text\"> Order Crossover (OX)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#cycle-crossover-cx\"><span class=\"toc-text\"> Cycle Crossover (CX)</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#multimeme-memetic-algorithms-mmas\"><span class=\"toc-text\"> Multimeme Memetic Algorithms (MMAs)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#self-adaptation\"><span class=\"toc-text\"> Self Adaptation</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#mutating-memes-during-evolution\"><span class=\"toc-text\"> Mutating Memes during evolution</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#hyper-heuristics-iii-motivation-characteristics-classification-misconceptions-of-hyper-heuristics-selection-hyper-heuristic-controlling-perturbative-heuristics\"><span class=\"toc-text\"> Hyper-heuristics (I&#x2F;II): Motivation &#x2F; Characteristics &#x2F; Classification &#x2F;Misconceptions of Hyper-heuristics, Selection Hyper-heuristic controlling Perturbative Heuristics</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#hyper-heuristics\"><span class=\"toc-text\"> Hyper-heuristics</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#motivation\"><span class=\"toc-text\"> Motivation</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#characteristics-of-hyper-heuristics-initial-framework\"><span class=\"toc-text\"> Characteristics of Hyper heuristics (initial framework)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#classification-of-hyper-heuristics\"><span class=\"toc-text\"> Classification of Hyper-heuristics</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#misconceptions-about-hyper-heuristics\"><span class=\"toc-text\"> Misconceptions about Hyper-heuristics</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#selection-hyper-heuristic-controlling-perturbative-heuristics\"><span class=\"toc-text\"> Selection Hyper-heuristic controlling Perturbative Heuristics</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#a-selection-hyper-heuristic-framework-single-point-search\"><span class=\"toc-text\"> A Selection Hyper heuristic Framework - Single Point Search</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#hyper-heuristics-flexible-interface-hyflex-multi-point-population-search\"><span class=\"toc-text\"> Hyper-heuristics Flexible Interface (HyFlex) - Multi-Point &#x2F; Population Search</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#heuristic-operator-selection-methods\"><span class=\"toc-text\"> Heuristic (Operator) selection methods</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#hyper-heuristics-iiii-selection-hyper-heuristic-controlling-constructive-heuristics-generation-hyper-heuristics-genetic-programming-gp\"><span class=\"toc-text\"> Hyper-heuristics (II&#x2F;II): Selection Hyper-heuristic controlling Constructive Heuristics, Generation Hyper-heuristics (Genetic Programming (GP))</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#selection-hyper-heuristic-controlling-constructive-heuristics\"><span class=\"toc-text\"> Selection Hyper-heuristic controlling Constructive Heuristics</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#a-graph-based-hyper-heuristic-ghh\"><span class=\"toc-text\"> A Graph-based Hyper-heuristic (GHH)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#graph-colouring-heuristics\"><span class=\"toc-text\"> Graph colouring heuristics</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#case-study-examination-timetabling-problem\"><span class=\"toc-text\"> Case study: examination timetabling problem</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#generation-hyper-heuristics\"><span class=\"toc-text\"> Generation Hyper-heuristics</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#genetic-programminggp\"><span class=\"toc-text\"> Genetic programming(GP)</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#advanced-topics\"><span class=\"toc-text\"> Advanced topics</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#case-study-policy-matrix-evolution-for-generation-of-heuristics-on-1d-online-bin-packing-problem\"><span class=\"toc-text\"> Case study: Policy Matrix Evolution for Generation of Heuristics on 1D Online Bin Packing Problem</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#index-policy\"><span class=\"toc-text\"> Index Policy</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#open-close\"><span class=\"toc-text\"> Open &#x2F; Close</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#potential-general-method-for-1d-online-bin-packing\"><span class=\"toc-text\"> Potential General Method for 1D Online Bin Packing</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#generating-heuristic\"><span class=\"toc-text\"> Generating Heuristic</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#matrix-view-of-policiesheuristics\"><span class=\"toc-text\"> Matrix View of Policies&#x2F;Heuristics</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#a-data-science-improved-hyper-heuristic\"><span class=\"toc-text\"> A Data Science Improved Hyper-heuristic</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#proposed-approach-ideas\"><span class=\"toc-text\"> Proposed Approach – Ideas</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#summary\"><span class=\"toc-text\"> Summary</span></a></li></ol></li></ol></li></ol>","author":{"name":"Huaji1hao","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/101538759?s=96&v=4","link":"/","description":"Run, don't walk. <br />Either running for food, or running from being food.","socials":{"github":"https://github.com/huaji1hao","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Something Interesting","uid":"156564d90d95b8548776617619625b2a","slug":"Luogu_profile","date":"2024-06-01T17:49:36.000Z","updated":"2024-06-09T22:49:51.058Z","comments":true,"path":"api/articles/Luogu_profile.json","keywords":null,"cover":"https://quotefancy.com/media/wallpaper/3840x2160/8151357-Hello-World-Wallpaper.jpg","text":" QAQ 你真的会百度吗？ 你谷模板 剪贴板迷宫 2048 2048朝代版 给神犇推荐一个构图网站 万能头文件（手动滑稽）： 1include <bugs/st...","permalink":"/post/Luogu_profile","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"Memes","slug":"Memes","count":1,"path":"api/categories/Memes.json"}],"tags":[{"name":"Fun","slug":"Fun","count":1,"path":"api/tags/Fun.json"}],"author":{"name":"Huaji1hao","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/101538759?s=96&v=4","link":"/","description":"Run, don't walk. <br />Either running for food, or running from being food.","socials":{"github":"https://github.com/huaji1hao","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"Algorithms, Data structure & Efficiency","uid":"e36df18b7817d5ce63296b0aa4c51d03","slug":"ade","date":"2024-06-09T22:34:56.000Z","updated":"2024-06-09T23:02:42.387Z","comments":true,"path":"api/articles/ade.json","keywords":null,"cover":"https://www.investopedia.com/thmb/J33BG-Cf03bW8-O4kXJfuht3gHA=/1500x0/filters:no_upscale():max_bytes(150000):strip_icc()/algorithm-df9b57e8ea7c494b891da25987643fab.jpg","text":" Algorithms, Data structure & Efficiency Algorithm: step-by-step procedure for s...","permalink":"/post/ade","photos":[],"count_time":{"symbolsCount":"51k","symbolsTime":"47 mins."},"categories":[{"name":"Notes","slug":"Notes","count":4,"path":"api/categories/Notes.json"}],"tags":[{"name":"Algorithms","slug":"Algorithms","count":1,"path":"api/tags/Algorithms.json"},{"name":"Data structure","slug":"Data-structure","count":1,"path":"api/tags/Data-structure.json"},{"name":"Efficiency","slug":"Efficiency","count":1,"path":"api/tags/Efficiency.json"}],"author":{"name":"Huaji1hao","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/101538759?s=96&v=4","link":"/","description":"Run, don't walk. <br />Either running for food, or running from being food.","socials":{"github":"https://github.com/huaji1hao","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false}}